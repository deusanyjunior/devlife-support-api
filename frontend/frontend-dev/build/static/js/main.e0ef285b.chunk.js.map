{"version":3,"sources":["services/auth/index.ts","services/routes/index.ts","contexts/user-context/index.tsx","components/Container/index.tsx","components/Table/index.tsx","components/Charts/Doughnut/index.tsx","components/Button/index.tsx","components/UserMenu/index.tsx","fragments/Header/index.tsx","helpers/index.ts","services/api.ts","screens/ExerciseAnswers/index.tsx","components/Redirect/AdminRedirect/index.tsx","components/Title/index.tsx","services/requests/index.ts","services/exercises/index.ts","fragments/ExerciseDetails/index.tsx","screens/InstructorHome/index.tsx","components/Form/Label/index.tsx","components/Form/ErrorMessage/index.tsx","components/Form/TextInput/index.tsx","components/Form/index.tsx","screens/Login/login-schema.ts","components/LoadingIndicator/index.tsx","screens/Login/index.tsx","hooks/useQuery.tsx","components/SubTitle/index.tsx","components/ProgressCheck/index.tsx","routes/index.ts","fragments/ExerciseResultVisualization/Column/index.tsx","fragments/ExerciseResultVisualization/CodeExerciseResult/index.tsx","fragments/ExerciseResultVisualization/GroupResult/index.tsx","fragments/ExerciseResultVisualization/TopicResult/index.tsx","fragments/ExerciseResultVisualization/ResultColumn/index.tsx","fragments/ExerciseResultVisualization/service/index.ts","fragments/ExerciseResultVisualization/index.tsx","screens/StudentHome/index.tsx","models/Exercise.ts","models/UserAnswerSummary.ts","components/Redirect/LoginRedirect/index.tsx","contexts/index.tsx","translations/i18n.ts","App/index.tsx","reportWebVitals.ts","index.tsx","components/LoadingIndicator/LoadingIndicator.module.css"],"names":["login","username","password","a","axios","post","then","res","data","key","token","get","headers","Authorization","userData","pk","email","firstName","first_name","lastName","last_name","isStaff","is_staff","catch","USER_KEY","storeUser","user","localStorage","setItem","JSON","stringify","removeItem","retrieveUser","loadedString","getItem","parse","UserContext","createContext","putUser","removeUser","useUser","useContext","UserProvider","children","useState","setUser","logUserIn","logUserOut","memoizedValue","useMemo","useEffect","loadedUser","Provider","value","Container","className","UnmemoizedTable","length","header","Object","keys","rows","map","item","values","cell","cellIndex","row","rowIndex","columnIndex","Table","memo","UnmemoizedDoughnutChart","labels","options","datasets","numSelectedOptions","backgroundColor","borderColor","borderWidth","maintainAspectRatio","Doughnut","Button","onClick","variant","type","disabled","variantClasses","primary","secondary","hidden","defaultProps","UserMenu","t","useTranslation","logout","to","routes","LOGIN","Header","navRoutes","uri","routeData","routesData","permissionTest","title","dynamicPathname","route","params","entries","regexp","RegExp","replace","String","api","create","baseURL","interceptors","request","use","config","ExerciseAnswers","useParams","offering","slug","answers","setAnswers","textAnswers","filter","answer","long_answer","timestamp","submission_date","summary","long","testsAnswers","isMounted","optionsAmount","num_choices","choices","choice","selectedOptionsCount","forEach","option","INSTRUCTOR_HOME","Date","toLocaleString","console","log","AdminRedirect","location","useLocation","pathname","search","Title","Component","textSize","marginTop","indexOf","useGetRequest","url","initialValue","skip","setData","error","setError","loading","setLoading","handleRequest","undefined","reason","finally","refresh","useExerciseList","exerciseList","ExerciseDetails","exerciseSlug","query","summaryList","useSummaryListForExercise","refreshSummaryList","numSubmissions","setNumSubmissions","numUniqueUsers","setNumUniqueUsers","lastRefresh","setLastRefresh","answerSummary","answer_count","reduce","b","answersRoute","EXERCISE_ANSWERS","total","users","lastUpdate","InstructorHome","Label","htmlFor","ErrorMessage","TextInput","forwardRef","props","ref","label","placeholder","inputId","name","otherProps","id","Form","schema","yup","shape","required","ContainerVariants","initial","transition","staggerChildren","animate","DotVariants","y","DotTransition","duration","repeat","Infinity","repeatType","ease","LoadingIndicator","light","dotClasses","styles","loadingDot","dark","animationContainer","motion","div","dotContainer","variants","span","Login","unmounted","useRef","current","invalidLogin","setInvalidLogin","history","useHistory","URLSearchParams","redirectTo","decodeURIComponent","window","href","useForm","resolver","yupResolver","register","handleSubmit","errors","formState","onUsernameChange","onChange","usernameInputProps","onPasswordChange","passwordInputProps","onSubmit","e","message","SubTitle","ProgressCheck","progress","Math","PI","checkLength","sqrt","circleVariants","start","strokeDashoffset","checkVariants","delay","width","height","viewBox","version","xmlns","r","cx","cy","fill","stroke","strokeWidth","circle","transform","strokeDasharray","path","d","Column","onSelect","completionRates","selectedRow","idx","handleClick","CodeExerciseResult","summaryMap","exercise","answerId","useAnswer","latest","round","max_points","passed","code","GroupResult","group","groupName","TopicResult","topic","topicName","getComponent","keys2","ResultColumn","extractCompletionRatesFromExercises","exercises","answerSummaries","fromEntries","extractCompletionRatesFromExerciseGroups","rates","ExerciseResultVisualization","exerciseGroups","setTopic","contentGroup","setContentGroup","topicCompletionRates","setTopicCompletionRates","assign","contentGroups","allExercises","concat","extractCompletionRatesFromTopicContents","setContentGroups","groupCompletionRates","setGroupCompletionRates","groups","setExercises","exerciseCompletionRates","setExerciseCompletionRates","selectedTopicRow","setSelectedTopicRow","selectedGroupRow","setSelectedGroupRow","selectedExerciseRow","setSelectedExerciseRow","selectedLevel","setSelectedLevel","selectedData","setSelectedData","StudentHome","setExerciseGroups","push","groupByTopicAndContent","useSummaryList","loadingSummaryList","setSummaryMap","summaryListToMap","STUDENT_HOME","exact","component","LoginRedirect","Contexts","i18n","initReactI18next","init","resources","en","translation","translationEN","pt","translationPT","lng","fallbackLng","interpolation","escapeValue","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.e0ef285b.chunk.js","sourcesContent":["import axios from \"axios\";\nimport { User } from \"../../models/User\";\nimport { LOGIN_PATH, USER_DATA_PATH } from \"../routes\";\n\nexport const login = async (\n  username: string,\n  password: string\n): Promise<User | null> => {\n  return axios\n    .post(LOGIN_PATH, { username, password })\n    .then((res) => res.data.key)\n    .then(async (token) => {\n      return axios\n        .get(USER_DATA_PATH, {\n          headers: {\n            Authorization: `Token ${token}`\n          }\n        })\n        .then((res) => res.data)\n        .then((userData) => {\n          return {\n            pk: userData.pk,\n            username: userData.username,\n            email: userData.email,\n            firstName: userData.first_name,\n            lastName: userData.last_name,\n            isStaff: userData.is_staff,\n            token\n          };\n        })\n        .catch(() => null);\n    })\n    .catch(() => null);\n};\n\nconst USER_KEY = \"devlife-user-data\";\nexport const storeUser = (user: User | null) => {\n  if (!!user) localStorage.setItem(USER_KEY, JSON.stringify(user));\n  else localStorage.removeItem(USER_KEY);\n};\nexport const retrieveUser = (): User | null => {\n  const loadedString = localStorage.getItem(USER_KEY);\n  if (!!loadedString) return JSON.parse(loadedString);\n  return null;\n};\n","// AUTHENTICATION\nexport const USER_DATA_PATH = \"/api/auth/user/\";\nexport const LOGIN_PATH = \"/api/auth/login/\";\n\n// EXERCISES\nexport const LIST_EXERCISES = \"/api/offerings/:offering/exercises/\"\nexport const EXERCISE_ANSWER = \"/api/offerings/:offering/exercises/:exerciseSlug/answers/:answerId/\"\nexport const LIST_EXERCISE_ANSWERS = \"/api/offerings/:offering/exercises/:slug/answers/\";\n\nexport const LIST_EXERCISES_SUMMARIES = \"/api/offerings/:offering/summaries/\"\nexport const EXERCISE_SUMMARY = \"/api/offerings/:offering/summaries/:exerciseSlug/\"\n","import React, {\n  createContext,\n  useState,\n  useMemo,\n  useContext,\n  useEffect,\n  ReactNode,\n} from \"react\";\nimport { User } from \"../../models/User\";\nimport { retrieveUser, storeUser } from \"../../services/auth\";\n\ninterface UserContextType {\n  user: User | null;\n  putUser: (user: User) => void;\n  removeUser: () => void;\n}\n\nexport const UserContext = createContext<UserContextType>({\n  user: null,\n  putUser: () => {},\n  removeUser: () => {},\n});\n\nconst UserProvider = ({ children }: { children: ReactNode }) => {\n  const [user, setUser] = useState<User | null>(retrieveUser());\n\n  const logUserIn = (user: User) => {\n    storeUser(user);\n    setUser(user);\n  };\n  const logUserOut = () => {\n    storeUser(null);\n    setUser(null);\n  };\n  const memoizedValue = useMemo(\n    () => ({ user, putUser: logUserIn, removeUser: logUserOut }),\n    [user],\n  );\n\n  useEffect(() => {\n    if (!user) {\n      const loadedUser: User | null = retrieveUser();\n      if (!!loadedUser) logUserIn(loadedUser);\n    }\n  }, [user]);\n\n  return (\n    <UserContext.Provider\n      value={{\n        user: memoizedValue.user,\n        putUser: memoizedValue.putUser,\n        removeUser: memoizedValue.removeUser,\n      }}>\n      {children}\n    </UserContext.Provider>\n  );\n};\n\nexport const useUser = (): UserContextType => {\n  const { user, putUser, removeUser } = useContext(UserContext);\n  return { user, putUser, removeUser };\n};\n\nexport default UserProvider;\n","import React, { HTMLProps } from \"react\";\n\nconst Container = ({ className, children }: HTMLProps<HTMLDivElement>) => {\n  return <div className={`mx-4 ${className}`}>{children}</div>;\n};\n\nexport default Container;\n","import { memo, ReactNode } from \"react\";\n\ninterface ITableProps {\n  data: Record<string, ReactNode>[];\n}\n\nfunction UnmemoizedTable({ data }: ITableProps) {\n  if (!data.length) {\n    return null;\n  }\n\n  const header = Object.keys(data[0]);\n  const rows = data.map((item) => Object.values(item));\n\n  return (\n    <div className=\"flex m-2\">\n      <div className=\"overflow-x-auto no-scrollbar max-w-full\">\n        <div className=\"align-middle inline-block\">\n          <div className=\"border-b border-gray-200 rounded-lg overflow-hidden border\">\n            <table className=\"divide-y divide-gray-200\">\n              <thead className=\"bg-gray-50\">\n                <tr>\n                  {header.map((cell, cellIndex) => (\n                    <th key={\"header__\" + cellIndex} className=\"p-3\">\n                      {cell}\n                    </th>\n                  ))}\n                </tr>\n              </thead>\n\n              <tbody className=\"bg-white divide-y divide-gray-50\">\n                {rows.map((row, rowIndex) => (\n                  <tr\n                    key={\"textAnswers__\" + rowIndex}\n                    className={!!(rowIndex % 2) ? \"bg-gray-100\" : \"bg-gray-50\"}>\n                    {row.map((cell, columnIndex) => (\n                      <td\n                        key={`cell__${columnIndex}${rowIndex}`}\n                        className=\"px-6 py-4 whitespace-nowrap\">\n                        {cell ?? \"\"}\n                      </td>\n                    ))}\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\n/**\n * usage:\n * \n * ```typescript\n * const data = [\n *   { h1: \"cell 00\", h2: \"cell 10\", h3: \"cell 20\" },\n *   { h1: \"cell 01\", h2: \"cell 11\", h3: \"cell 21\" },\n *   { h1: \"cell 02\", h2: \"cell 12\", h3: \"cell 22\" },\n * ]\n * ```\n *\n * ```typescriptreact\n * <Table data={data} />\n * ```\n *\n * To render:\n *\n    | h1      | h2      | h3       |\n    |---------|---------|----------|\n    | cell 00 | cell 10 | cell 20  |\n    | cell 01 | cell 11 | cell 21  |\n    | cell 02 | cell 12 | cell 22  |\n */\nexport const Table = memo(UnmemoizedTable);\n","import { memo } from \"react\";\nimport { Doughnut as DoughnutChartJS } from \"react-chartjs-2\";\n\ninterface IProps {\n  options: string[];\n  numSelectedOptions: number[];\n}\n\nfunction UnmemoizedDoughnutChart({ options, numSelectedOptions }: IProps) {\n  const data = {\n    labels: options,\n    datasets: [\n      {\n        data: numSelectedOptions,\n        backgroundColor: [\n          \"#ff638433\",\n          \"#76f25d33\",\n          \"#36a2eb33\",\n          \"#ffce5633\",\n          \"#765df233\",\n          \"#21fcf233\",\n          \"#ff9f4033\",\n        ],\n        borderColor: [\n          \"#ff6384\",\n          \"#76f25d\",\n          \"#36a2eb\",\n          \"#ffce56\",\n          \"#765df2\",\n          \"#21fcf2\",\n          \"#ff9f40\",\n        ],\n        borderWidth: 2,\n      },\n    ],\n  };\n\n  return (\n    <div className=\"sm:w-2/3 md:w-1/3 lg:w-1/4\">\n      <DoughnutChartJS data={data} options={{ maintainAspectRatio: true }} />\n    </div>\n  );\n}\n\nexport const Doughnut = memo(UnmemoizedDoughnutChart);\n","import React, { HTMLProps } from \"react\";\n\ninterface ButtonProps {\n  className: string;\n  variant: \"primary\" | \"secondary\" | \"hidden\";\n  type: \"button\" | \"submit\" | \"reset\" | undefined;\n}\n\nconst defaultProps = {\n  className: \"\",\n  variant: \"primary\",\n  type: \"button\",\n};\n\nconst Button = ({\n  onClick,\n  variant,\n  children,\n  type,\n  disabled,\n  className,\n}: ButtonProps & HTMLProps<HTMLButtonElement>) => {\n  const variantClasses = {\n    primary: disabled\n      ? \"bg-gray-300 text-gray-500 cursor-default\"\n      : \"bg-primary hover:bg-primary-500 text-white\",\n    secondary: disabled\n      ? \"bg-gray-300 text-gray-500 cursor-default\"\n      : \"bg-secondary hover:bg-secondary-500 text-white\",\n    hidden: disabled\n      ? \"bg-transparent text-gray-500 cursor-default\"\n      : \"bg-transparent\",\n  }[variant];\n\n  return (\n    <button\n      className={`${className} ${variantClasses} font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline flex justify-center items-center`}\n      onClick={onClick}\n      type={type}\n      disabled={disabled}>\n      {children}\n    </button>\n  );\n};\n\nButton.defaultProps = defaultProps;\n\nexport default Button;\n","import React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { Link } from \"react-router-dom\";\nimport { useUser } from \"../../contexts/user-context\";\nimport { routes } from \"../../routes\";\nimport Button from \"../Button\";\n\nconst UserMenu = () => {\n  const { t } = useTranslation();\n  const { user, removeUser: logout } = useUser();\n\n  return (\n    <>\n      {!user && <Link to={routes.LOGIN}>{t(\"Login\")}</Link>}\n      {!!user && (\n        <Button variant=\"hidden\" onClick={logout}>\n          {t(\"Logout\")}\n        </Button>\n      )}\n    </>\n  );\n};\n\nexport default UserMenu;\n","import React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { Link } from \"react-router-dom\";\nimport UserMenu from \"../../components/UserMenu\";\nimport { useUser } from \"../../contexts/user-context\";\nimport { navRoutes, routesData } from \"../../routes\";\n\nconst Header = () => {\n  const { t } = useTranslation();\n  const { user } = useUser();\n\n  return (\n    <nav className=\"py-2 px-4\">\n      <ul className=\"flex items-center\">\n        <li className=\"uppercase font-bold\">\n          <Link to=\"/\">{t(\"Developer Life\")}</Link>\n        </li>\n        {navRoutes.map((uri) => {\n          const routeData = routesData[uri];\n          if (routeData.permissionTest && !routeData.permissionTest(user))\n            return null;\n          const title = routeData.title;\n          return (\n            <li key={`nav__${uri}`} className=\"ml-4\">\n              <Link to={uri}>{t(title)}</Link>\n            </li>\n          );\n        })}\n        <li className=\"ml-auto\">\n          <UserMenu />\n        </li>\n      </ul>\n    </nav>\n  );\n};\n\nexport default Header;\n","/**\n *\n * @param route Dynamic route. Ex:\n * ```typescript\n *    \"/api/offerings/:off_pk/exercises/:ex_slug/answers/\"\n * ```\n * @param params Object with dynamic params. Ex:\n * ```typescript\n * {off_pk: 1, ex_slug: 'quiz-0'})\n * ```\n * @returns Properly filled route\n * ```typescript\n * \"/api/offerings/1/exercises/quiz-0/answers\"\n * ```\n */\nexport function dynamicPathname(route: string, params: Record<string, string|number>) {\n  for (let [key, value] of Object.entries(params)) {\n    const regexp = new RegExp(`:${key}`, \"g\");\n    route = route.replace(regexp, String(value));\n  }\n  return route;\n}\n","import axios, { AxiosRequestConfig } from \"axios\";\nimport { retrieveUser } from \"./auth\";\n\nexport const api = axios.create({\n  baseURL: \"/\"\n});\n\nfunction preRequest(config: AxiosRequestConfig) {\n  const user = retrieveUser();\n  if (user) {\n    config.headers = { ...config.headers, Authorization: `Token ${user.token}` };\n  } else {\n    // handle \"not signed in\" case for current user\n    // what should happen if current user tries to make an \n    // authenticaded api call without credentials?\n  }\n  return config;\n}\n\napi.interceptors.request.use(preRequest);\n","import { useEffect, useMemo, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useParams } from \"react-router\";\nimport { Link } from \"react-router-dom\";\nimport Container from \"../../components/Container\";\nimport { Table } from \"../../components/Table\";\nimport { Bars, Doughnut } from \"../../components/Charts\";\nimport Header from \"../../fragments/Header\";\nimport { dynamicPathname } from \"../../helpers\";\nimport { routes } from \"../../routes\";\nimport { api } from \"../../services/api\";\nimport { LIST_EXERCISE_ANSWERS } from \"../../services/routes\";\nimport Button from \"../../components/Button\";\n\ninterface IExerciseAnswersParams {\n  offering: string;\n  slug: string;\n}\n\ninterface ISummary {\n  choice: number;\n  num_choices: number;\n}\ninterface IAnswer {\n  pk: number;\n  user: number;\n  exercise: number;\n  points: number;\n  submission_date: string;\n  summary?: ISummary;\n  long_answer?: string;\n}\n\nfunction ExerciseAnswers() {\n  const { t } = useTranslation();\n  const { offering, slug } = useParams<IExerciseAnswersParams>();\n  const [answers, setAnswers] = useState<IAnswer[]>([]);\n\n  const textAnswers = useMemo(() => {\n    return answers\n      .filter((answer) => typeof answer.long_answer === \"string\")\n      .map((answer) => ({\n        timestamp: answer.submission_date,\n        summary: answer.summary,\n        long: answer.long_answer,\n      }));\n  }, [answers]);\n\n  const testsAnswers = useMemo(() => {\n    return answers\n      .filter((answer) => !!(typeof answer.summary !== \"string\"))\n      .map((answer) => answer.summary);\n  }, [answers]);\n\n  useEffect(() => {\n    let isMounted = true; // prevent memory leak\n\n    api\n      .get<IAnswer[]>(\n        dynamicPathname(LIST_EXERCISE_ANSWERS, { offering, slug })\n      )\n      .then((res) => {\n        if (isMounted) {\n          setAnswers(res.data || []);\n        }\n      });\n\n    return () => {\n      isMounted = false;\n    };\n  }, []);\n\n  const optionsAmount = useMemo(() => {\n    let optionsAmount;\n    optionsAmount = testsAnswers[0]?.num_choices || 0;\n    return optionsAmount;\n  }, [testsAnswers]);\n\n  // options: A, B, C...\n  const [options, selectedOptionsCount] = useMemo(() => {\n    const options = [...\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"];\n    options.length = optionsAmount;\n\n    const choices = testsAnswers.map((answer) => options[answer?.choice || 0]);\n\n    const selectedOptionsCount: Record<string, number> = {};\n    options.forEach((option) => {\n      selectedOptionsCount[option] = choices.filter(\n        (choice) => choice === option\n      ).length;\n    });\n    return [options, Object.values(selectedOptionsCount)];\n  }, [testsAnswers, optionsAmount]);\n\n  return (\n    <Container>\n      <Header />\n\n      <Link\n        to={routes.INSTRUCTOR_HOME}\n        className=\"bg-gray-100 text-blue-500 px-4 py-2\">\n        <b>{t(\"Go back\")}</b>\n      </Link>\n\n      <div className=\"my-4 p-4 fit-content\">\n        <p className=\"mr-4\">\n          <b>{t(\"Offering\")}:</b> {offering}\n        </p>\n        <p className=\"mr-4\">\n          <b>{t(\"Exercise slug\")}:</b> {slug}\n        </p>\n        <p>\n          <b>{t(\"Multiple choices answers\")}:</b> {testsAnswers.length}\n        </p>\n        <p>\n          <b>{t(\"Text answers\")}:</b> {textAnswers.length}\n        </p>\n      </div>\n\n      {!!testsAnswers.length && (\n        <Doughnut options={options} numSelectedOptions={selectedOptionsCount} />\n      )}\n\n      {!!textAnswers.length && (\n        <Table\n          data={textAnswers.map((answer) => ({\n            [t(\"Submission time\")]: new Date(answer.timestamp).toLocaleString(),\n            [t(\"Summary\")]: answer.summary,\n            [t(\"Long answer\")]: (\n              <Button\n                variant=\"primary\"\n                onClick={() => {\n                  console.log(answer.long);\n                }}>\n                click me\n              </Button>\n            ),\n          }))}\n        />\n      )}\n    </Container>\n  );\n}\n\nexport default ExerciseAnswers;\n","import React from \"react\";\nimport { Redirect, useLocation } from \"react-router\";\nimport { useUser } from \"../../../contexts/user-context\";\nimport { routes } from \"../../../routes\";\n\nconst AdminRedirect = () => {\n  const { user } = useUser();\n  const location = useLocation();\n\n  if (!!user && !user.isStaff)\n    return (\n      <Redirect\n        to={{\n          pathname: routes.LOGIN,\n          search: `?next=${location.pathname}&reason=not-admin`,\n        }}\n      />\n    );\n  return null;\n};\n\nexport default AdminRedirect;\n","import React, { HTMLProps } from \"react\";\n\ninterface TitleProps {\n  variant: 1 | 2 | 5;\n}\n\nconst defaultProps = {\n  variant: 1,\n};\n\nconst Title = ({\n  variant,\n  children,\n  className,\n}: HTMLProps<HTMLHeadingElement> & TitleProps & typeof defaultProps) => {\n  const Component = variant === 5 ? \"h5\" : variant === 2 ? \"h2\" : \"h1\";\n  const textSize = variant === 5 ? \"\" : variant === 2 ? \"text-2xl\" : \"text-4xl\";\n  const marginTop =\n    !className || (className.indexOf(\"mt-\") < 0 && className.indexOf(\"my-\") < 0)\n      ? \"mt-4\"\n      : \"\";\n\n  return (\n    <Component\n      className={`${\n        className || \"\"\n      } uppercase font-bold ${textSize} leading-none tracking-wide ${marginTop}`}>\n      {children}\n    </Component>\n  );\n};\nTitle.defaultProps = defaultProps;\n\nexport default Title;\n","import axios from \"axios\";\nimport { useEffect, useState } from \"react\";\n\nexport const useGetRequest = <T>(\n  url: string,\n  initialValue: T,\n  token?: string,\n  skip?: boolean,\n) => {\n  const [data, setData] = useState<T>(initialValue);\n  const [error, setError] = useState();\n  const [loading, setLoading] = useState(true);\n\n  const handleRequest = () => {\n    const params: any = {};\n    if (!!token) params[\"headers\"] = { Authorization: `Token ${token}` };\n\n    setLoading(true);\n    setError(undefined);\n    axios\n      .get(url, params)\n      .then((res) => res.data)\n      .then(setData)\n      .catch((reason) => setError(reason))\n      .finally(() => setLoading(false));\n  };\n\n  useEffect(() => {\n    if (!skip) handleRequest();\n  }, [url, token, skip]);\n\n  return { data, error, loading, refresh: handleRequest };\n};\n","import { dynamicPathname } from \"../../helpers\";\nimport { Answer } from \"../../models/Answer\";\nimport { Exercise } from \"../../models/Exercise\";\nimport { UserAnswerSummary } from \"../../models/UserAnswerSummary\";\nimport { useGetRequest } from \"../requests\";\nimport {\n  EXERCISE_ANSWER,\n  EXERCISE_SUMMARY,\n  LIST_EXERCISES,\n  LIST_EXERCISES_SUMMARIES\n} from \"../routes\";\n\nexport const useExerciseList = (offering: number, token: string) => {\n  const { data, error, loading, refresh } = useGetRequest<Exercise[]>(\n    dynamicPathname(LIST_EXERCISES, { offering: String(offering) }),\n    [],\n    token\n  );\n  return { exerciseList: data, error, loading, refresh };\n};\n\nexport const useAnswer = (\n  offering: number,\n  token: string,\n  exerciseSlug: string,\n  answerId: number\n) => {\n  const { data, error, loading, refresh } = useGetRequest<Answer | null>(\n    dynamicPathname(EXERCISE_ANSWER, { offering, exerciseSlug, answerId }),\n    null,\n    token,\n    !(exerciseSlug && token && answerId !== undefined && offering !== undefined)\n  );\n  return { answer: data, error, loading, refresh };\n};\n\nexport const useSummaryList = (\n  offering: number,\n  token: string,\n  user?: number\n) => {\n  const query = user ? `?user=${user}` : \"\";\n  const { data, error, loading, refresh } = useGetRequest<UserAnswerSummary[]>(\n    `${dynamicPathname(LIST_EXERCISES_SUMMARIES, { offering })}${query}`,\n    [],\n    token\n  );\n  return { summaryList: data, error, loading, refresh };\n};\n\nexport const useSummaryListForExercise = (\n  offering: number,\n  exerciseSlug: string,\n  token: string,\n  user?: number\n) => {\n  const query = user ? `?user=${user}` : \"\";\n  const { data, error, loading, refresh } = useGetRequest<UserAnswerSummary[]>(\n    `${dynamicPathname(EXERCISE_SUMMARY, {\n      offering,\n      exerciseSlug\n    })}${query}`,\n    [],\n    token\n  );\n  return { summaryList: data, error, loading, refresh };\n};\n","import { useEffect, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { Link } from \"react-router-dom\";\nimport Button from \"../../components/Button\";\nimport { useUser } from \"../../contexts/user-context\";\nimport { dynamicPathname } from \"../../helpers\";\nimport { routes } from \"../../routes\";\nimport { useSummaryListForExercise } from \"../../services/exercises\";\n\ninterface ExerciseDetailsProps {\n  offering: number;\n  slug: string;\n}\n\nconst ExerciseDetails = ({ offering, slug }: ExerciseDetailsProps) => {\n  const { user } = useUser();\n  const token = user?.token || \"\";\n  const {\n    summaryList,\n    loading,\n    refresh: refreshSummaryList,\n  } = useSummaryListForExercise(offering, slug, token);\n\n  const { t } = useTranslation();\n\n  const [numSubmissions, setNumSubmissions] = useState<number>(0);\n  const [numUniqueUsers, setNumUniqueUsers] = useState<number>(0);\n  const [lastRefresh, setLastRefresh] = useState<Date>();\n\n  useEffect(() => {\n    if (loading) return;\n    setNumUniqueUsers(summaryList.length);\n    setNumSubmissions(\n      summaryList\n        .map((answerSummary) => answerSummary.answer_count)\n        .reduce((a, b) => a + b, 0)\n    );\n    setLastRefresh(new Date());\n  }, [loading, summaryList]);\n\n  const answersRoute = dynamicPathname(routes.EXERCISE_ANSWERS, {\n    offering,\n    slug,\n  });\n\n  return (\n    <div className=\"bg-gray-100 p-4 flex flex-col\">\n      <div className=\"flex-grow\">\n        <p> {slug} </p>\n        {!!lastRefresh && (\n          <p>\n            {t(\"submissions sent before\", {\n              total: numSubmissions,\n              users: numUniqueUsers,\n              lastUpdate: lastRefresh?.toLocaleString(),\n            })}\n          </p>\n        )}\n      </div>\n      <div className=\"flex flex-row mt-4 justify-around\">\n        <Link to={answersRoute}>\n          <Button>{t(\"See details\")}</Button>\n        </Link>\n        <Button onClick={refreshSummaryList}>{t(\"Reload\")}</Button>\n      </div>\n    </div>\n  );\n};\n\nexport default ExerciseDetails;\n","import { useTranslation } from \"react-i18next\";\nimport Container from \"../../components/Container\";\nimport AdminRedirect from \"../../components/Redirect/AdminRedirect\";\nimport Title from \"../../components/Title\";\nimport { useUser } from \"../../contexts/user-context\";\nimport ExerciseDetails from \"../../fragments/ExerciseDetails\";\nimport Header from \"../../fragments/Header\";\nimport { Exercise } from \"../../models/Exercise\";\nimport { useExerciseList } from \"../../services/exercises\";\n\nconst InstructorHome = () => {\n  const { t } = useTranslation();\n  const { user } = useUser();\n\n  const token = user?.token || \"\";\n  const offering = 1;\n\n  const { exerciseList } = useExerciseList(offering, token);\n\n  return (\n    <>\n      <AdminRedirect />\n      <Header />\n      <Container>\n        <Title>{t(\"Instructor Dashboard\")}</Title>\n        <div className=\"grid gap-1 grid-cols-3 mt-4\">\n          {exerciseList.map((item: Exercise) => (\n            <ExerciseDetails\n              key={`exercise-${item.slug}`}\n              offering={offering}\n              slug={item.slug}\n            />\n          ))}\n        </div>\n      </Container>\n    </>\n  );\n};\n\nexport default InstructorHome;\n","import React, { HTMLProps } from \"react\";\n\nconst Label = ({ htmlFor, children }: HTMLProps<HTMLLabelElement>) => {\n  return (\n    <label\n      htmlFor={htmlFor}\n      className=\"block text-gray-700 text-sm font-bold mb-1\">\n      {children}\n    </label>\n  );\n};\n\nexport default Label;\n","import React, { ReactNode } from \"react\";\n\ninterface ErrorMessageProps {\n  children: ReactNode;\n}\n\nconst ErrorMessage = ({ children }: ErrorMessageProps) => {\n  return <p className=\"text-red-500 text-xs italic\">{children}</p>;\n};\n\nexport default ErrorMessage;\n","import React, { forwardRef, HTMLProps } from \"react\";\nimport ErrorMessage from \"../ErrorMessage\";\nimport Label from \"../Label\";\n\ninterface TextInputProps {\n  inputId: string;\n  label?: string;\n  placeholder?: string;\n  type?: string;\n  error?: string;\n}\n\nconst defaultProps = {\n  type: \"text\",\n};\n\nconst TextInput = forwardRef<\n  HTMLInputElement,\n  TextInputProps & HTMLProps<HTMLInputElement>\n>((props, ref) => {\n  const {\n    error,\n    label,\n    placeholder,\n    inputId,\n    name,\n    type,\n    ...otherProps\n  } = props;\n  return (\n    <div className=\"mb-4\">\n      {label && <Label htmlFor={inputId}>{label}</Label>}\n      <input\n        className={`appearance-none border ${\n          error ? \"border-red-500\" : \"border-gray-300\"\n        } rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline`}\n        id={inputId}\n        type={type}\n        name={name}\n        ref={ref}\n        placeholder={placeholder || \"\"}\n        {...otherProps}\n      />\n      {error && <ErrorMessage>{error}</ErrorMessage>}\n    </div>\n  );\n});\n\nTextInput.defaultProps = defaultProps;\n\nexport default TextInput;\n","import React, { HTMLProps } from \"react\";\nimport Label from \"./Label\";\nimport TextInput from \"./TextInput\";\n\nconst Form = (props: HTMLProps<HTMLFormElement>) => {\n  return <form {...props} />;\n};\n\nForm.Label = Label;\nForm.TextInput = TextInput;\n\nexport default Form;\n","import * as yup from \"yup\";\n\nexport interface LoginInputs {\n  username: string;\n  password: string;\n}\n\nexport const schema = yup.object().shape({\n  username: yup.string().required(),\n  password: yup.string().required(),\n});\n","import React from \"react\";\nimport { motion, Transition, Variants } from \"framer-motion\";\nimport styles from \"./LoadingIndicator.module.css\";\n\nconst ContainerVariants = {\n  initial: {\n    transition: {\n      staggerChildren: 0.2,\n    },\n  },\n  animate: {\n    transition: {\n      staggerChildren: 0.2,\n    },\n  },\n};\n\nconst DotVariants: Variants = {\n  initial: {\n    y: \"0%\",\n  },\n  animate: {\n    y: \"100%\",\n  },\n};\n\nconst DotTransition: Transition = {\n  duration: 0.5,\n  repeat: Infinity,\n  repeatType: \"reverse\",\n  ease: \"easeInOut\",\n};\n\ninterface LoadingIndicatorProps {\n  className?: string;\n  light?: boolean;\n}\n\nconst LoadingIndicator = ({ light, className }: LoadingIndicatorProps) => {\n  const dotClasses = `${styles.loadingDot} ${\n    light ? styles.light : styles.dark\n  }`;\n  return (\n    <div className={`${className || \"\"} ${styles.animationContainer}`}>\n      <motion.div\n        className={styles.dotContainer}\n        variants={ContainerVariants}\n        initial=\"initial\"\n        animate=\"animate\">\n        <motion.span\n          className={dotClasses}\n          variants={DotVariants}\n          transition={DotTransition}\n        />\n        <motion.span\n          className={dotClasses}\n          variants={DotVariants}\n          transition={DotTransition}\n        />\n        <motion.span\n          className={dotClasses}\n          variants={DotVariants}\n          transition={DotTransition}\n        />\n      </motion.div>\n    </div>\n  );\n};\n\nexport default LoadingIndicator;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport Form from \"../../components/Form\";\nimport { useTranslation } from \"react-i18next\";\nimport Button from \"../../components/Button\";\nimport { schema, LoginInputs } from \"./login-schema\";\nimport { login } from \"../../services/auth\";\nimport { useUser } from \"../../contexts/user-context\";\nimport ErrorMessage from \"../../components/Form/ErrorMessage\";\nimport { useHistory } from \"react-router\";\nimport LoadingIndicator from \"../../components/LoadingIndicator\";\nimport useQuery from \"../../hooks/useQuery\";\n\nconst Login = () => {\n  const unmounted = useRef(false);\n  useEffect(() => {\n    return () => {\n      unmounted.current = true;\n    };\n  }, []);\n  const [invalidLogin, setInvalidLogin] = useState<boolean>(false);\n  const [loading, setLoading] = useState<boolean>(false);\n  const { t } = useTranslation();\n  const { user, putUser } = useUser();\n  const history = useHistory();\n  const params = useQuery();\n  let redirectTo = params.get(\"redirectTo\");\n\n  useEffect(() => {\n    if (user && redirectTo) {\n      redirectTo = decodeURIComponent(redirectTo);\n      redirectTo += `${redirectTo.indexOf(\"?\") >= 0 ? \"&\" : \"?\"}token=${\n        user.token\n      }`;\n      window.location.href = redirectTo;\n    }\n  }, [user, redirectTo]);\n\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm<LoginInputs>({\n    resolver: yupResolver(schema),\n  });\n\n  const onSubmit = (data: LoginInputs) => {\n    setLoading(true);\n    login(data.username, data.password)\n      .then((user) => {\n        if (unmounted.current) return;\n        if (!user) setInvalidLogin(true);\n        else {\n          putUser(user);\n          if (!redirectTo) {\n            history.replace(params.get(\"next\") || \"/\");\n          }\n        }\n      })\n      .finally(() => !unmounted.current && setLoading(false));\n  };\n\n  const { onChange: onUsernameChange, ...usernameInputProps } = register(\n    \"username\",\n  );\n  const handleUsernameChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setInvalidLogin(false);\n    onUsernameChange(e);\n  };\n\n  const { onChange: onPasswordChange, ...passwordInputProps } = register(\n    \"password\",\n  );\n  const handlePasswordChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setInvalidLogin(false);\n    onPasswordChange(e);\n  };\n\n  return (\n    <div className=\"w-full min-h-screen px-2 flex flex-col justify-center\">\n      <div className=\"max-w-xs mx-auto rounded shadow\">\n        <h1 className=\"text-3xl uppercase px-6 py-4 bg-primary text-white rounded-t text-center\">\n          {t(\"Developer Life\")}\n        </h1>\n        <Form className=\"px-4 py-4\" onSubmit={handleSubmit(onSubmit)}>\n          <Form.TextInput\n            label={t(\"Username\")}\n            inputId=\"username\"\n            placeholder={t(\"Type username\")}\n            {...usernameInputProps}\n            onChange={handleUsernameChange}\n            error={t(errors?.username?.message || \"\")}\n          />\n          <Form.TextInput\n            label={t(\"Password\")}\n            inputId=\"password\"\n            type=\"password\"\n            placeholder={t(\"Password\")}\n            {...passwordInputProps}\n            onChange={handlePasswordChange}\n            error={t(errors?.password?.message || \"\")}\n          />\n          {invalidLogin && (\n            <ErrorMessage>{t(\"Invalid credentials\")}</ErrorMessage>\n          )}\n          {!!params.get(\"reason\") && (\n            <ErrorMessage>{t(params.get(\"reason\") || \"\")}</ErrorMessage>\n          )}\n          <Button className=\"mt-2 w-full\" type=\"submit\" disabled={loading}>\n            {t(\"Sign in\")}\n          </Button>\n          {loading && (\n            <div className=\"w-full flex justify-center\">\n              <LoadingIndicator className=\"text-xs\" />\n            </div>\n          )}\n        </Form>\n      </div>\n    </div>\n  );\n};\n\nexport default Login;\n","import { useLocation } from \"react-router\";\n\nexport default (): URLSearchParams => {\n  return new URLSearchParams(useLocation().search);\n};\n","import React, { HTMLProps } from \"react\";\n\nconst SubTitle = ({ children, className }: HTMLProps<HTMLHeadingElement>) => {\n  return (\n    <h2\n      className={`${className || \"\"} text-2xl text-primary leading-none mt-1`}>\n      {children}\n    </h2>\n  );\n};\n\nexport default SubTitle;\n","import React from \"react\";\nimport { motion } from \"framer-motion\";\n\ninterface ProgressCheckProps {\n  className?: string;\n  progress: number; // Should be in [0.0, 1.0]\n}\n\nconst defaultProps = {\n  progress: 1,\n};\n\nconst ProgressCheck = ({ className, progress }: ProgressCheckProps) => {\n  const length = 2 * 90 * Math.PI;\n  if (progress < 0) progress = 0;\n  if (progress > 1) progress = 1;\n\n  const checkLength = (40 + 70) * Math.sqrt(2);\n\n  const circleVariants = {\n    start: {\n      strokeDashoffset: length,\n    },\n    progress: {\n      strokeDashoffset: length * (1 - progress),\n      transition: {\n        duration: 0.5,\n      },\n    },\n  };\n  const checkVariants = {\n    start: {\n      strokeDashoffset: checkLength,\n    },\n    progress: {\n      strokeDashoffset: 0,\n      transition: {\n        duration: 0.5,\n        delay: 0.2,\n      },\n    },\n  };\n\n  return (\n    <svg\n      className={className || \"\"}\n      id=\"svg\"\n      width=\"200\"\n      height=\"200\"\n      viewBox=\"0 0 200 200\"\n      version=\"1.1\"\n      xmlns=\"http://www.w3.org/2000/svg\">\n      <circle\n        r=\"90\"\n        cx=\"100\"\n        cy=\"100\"\n        fill=\"transparent\"\n        stroke=\"#cad8ca\"\n        strokeWidth=\"20\"\n      />\n      <motion.circle\n        r=\"90\"\n        cx=\"100\"\n        cy=\"100\"\n        fill=\"transparent\"\n        stroke=\"#27A5A2\"\n        transform=\"rotate(-90 100 100)\"\n        strokeWidth=\"20\"\n        strokeDasharray={`${length}`}\n        strokeDashoffset={`${length * (1 - progress)}`}\n        variants={circleVariants}\n        initial=\"start\"\n        animate=\"progress\"\n      />\n      {progress === 1 && (\n        <motion.path\n          d=\"M45 95L85 135L155 65\"\n          fill=\"transparent\"\n          stroke=\"#27A5A2\"\n          strokeWidth=\"20\"\n          strokeDasharray={`${checkLength}`}\n          strokeDashoffset={\"0\"}\n          variants={checkVariants}\n          initial=\"start\"\n          animate=\"progress\"\n        />\n      )}\n    </svg>\n  );\n};\n\nProgressCheck.defaultProps = defaultProps;\n\nexport default ProgressCheck;\n","import { RouteProps } from \"react-router\";\nimport { User } from \"../models/User\";\nimport ExerciseAnswers from \"../screens/ExerciseAnswers\";\nimport InstructorHome from \"../screens/InstructorHome\";\nimport Login from \"../screens/Login\";\nimport StudentHome from \"../screens/StudentHome\";\n\nexport enum routes {\n  STUDENT_HOME = \"/\",\n  INSTRUCTOR_HOME = \"/instructor\",\n  EXERCISE_ANSWERS = \"/instructor/answers/:offering/:slug/\",\n  LOGIN = \"/login\"\n}\n\ninterface RouteData {\n  title: string;\n  permissionTest?: (user: User | null) => boolean;\n  props: RouteProps;\n}\n\nexport const routesData: { [route: string]: RouteData } = {};\nroutesData[routes.STUDENT_HOME] = {\n  title: \"Student Dashboard\",\n  props: {\n    path: routes.STUDENT_HOME,\n    exact: true,\n    component: StudentHome\n  }\n};\nroutesData[routes.INSTRUCTOR_HOME] = {\n  title: \"Instructor Dashboard\",\n  permissionTest: (user: User | null): boolean => !!user?.isStaff,\n  props: {\n    path: routes.INSTRUCTOR_HOME,\n    exact: true,\n    component: InstructorHome\n  }\n};\nroutesData[routes.EXERCISE_ANSWERS] = {\n  title: \"Exercise Answers\",\n  permissionTest: (user: User | null): boolean => !!user?.isStaff,\n  props: {\n    path: routes.EXERCISE_ANSWERS,\n    exact: true,\n    component: ExerciseAnswers\n  }\n};\nroutesData[routes.LOGIN] = {\n  title: \"Login\",\n  props: {\n    path: routes.LOGIN,\n    exact: true,\n    component: Login\n  }\n};\n\nexport const navRoutes: string[] = [routes.INSTRUCTOR_HOME];\n","import React from \"react\";\nimport ProgressCheck from \"../../../components/ProgressCheck\";\nimport Title from \"../../../components/Title\";\nimport { CompletionRates } from \"../service\";\n\ninterface ColumnProps {\n  title: string;\n  options: string[];\n  completionRates: CompletionRates;\n  selectedRow: number;\n  onSelect?: (option: string, index: number) => void;\n}\n\nconst Column = ({\n  options,\n  onSelect,\n  title,\n  completionRates,\n  selectedRow,\n}: ColumnProps) => {\n  const handleClick = (idx: number) => {\n    onSelect && onSelect(options[idx], idx);\n  };\n\n  return (\n    <div className=\"border border-gray-200 py-2 overflow-hidden\">\n      <Title variant={5} className=\"px-4 mt-2\">\n        {title}\n      </Title>\n      <ul className=\"mt-4\">\n        {options.map((option, idx) => (\n          <li\n            key={`option-${option}-${idx}`}\n            onClick={() => handleClick(idx)}\n            className={`flex items-center cursor-pointer px-4 py-1 ${\n              idx === selectedRow ? \"bg-primary-50\" : \"\"\n            }`}>\n            <div className=\"min-w-min mr-2\">\n              <ProgressCheck\n                className=\"w-6 h-6\"\n                progress={completionRates[option]}\n              />\n            </div>\n            {option}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Column;\n","import React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport Button from \"../../../components/Button\";\nimport Title from \"../../../components/Title\";\nimport { useUser } from \"../../../contexts/user-context\";\nimport { Exercise } from \"../../../models/Exercise\";\nimport { UserAnswerSummaryMap } from \"../../../models/UserAnswerSummary\";\nimport { useAnswer } from \"../../../services/exercises\";\n\ninterface CodeExerciseResultProps {\n  offering: number;\n  summaryMap: UserAnswerSummaryMap;\n  exercise: Exercise;\n}\n\nconst CodeExerciseResult = ({\n  offering,\n  summaryMap,\n  exercise,\n}: CodeExerciseResultProps) => {\n  const { t } = useTranslation();\n  const { user } = useUser();\n\n  const summary = summaryMap[exercise?.pk];\n  const { answer } = useAnswer(\n    offering,\n    user?.token || \"\",\n    exercise?.slug,\n    summary?.latest,\n  );\n  return (\n    <>\n      <Title variant={5} className=\"px-4 mt-2\">\n        {exercise?.slug || \"\"}\n      </Title>\n      <div className=\"px-4 mt-4\">\n        <Button className=\"uppercase tracking-wide\">Ver Exercício</Button>\n        <section className=\"mt-6\">\n          <Title variant={5}>{t(\"Results\")}</Title>\n          <div className=\"flex flex-wrap mt-2\">\n            <span className=\"mr-8\">\n              {t(\"Max points\")}:{\" \"}\n              <strong className=\"font-bold text-primary-500\">\n                {Math.round((summary?.max_points || 0) * 10000) / 100}%\n              </strong>\n            </span>\n            <span className=\"mr-8\">\n              {t(\"Attempts\")}:{\" \"}\n              <strong className=\"font-bold\">\n                {summary?.answer_count || 0}\n              </strong>\n            </span>\n          </div>\n        </section>\n        {exercise.type === \"CODE\" && (\n          <section className=\"mt-6\">\n            <h6 className=\"font-bold\">{t(\"Last attempt\")}</h6>\n            <div className=\"flex flex-wrap mt-2\">\n              <span className=\"mr-8\">\n                {t(\"Tests passing\")}:{\" \"}\n                <strong className=\"font-bold\">\n                  {answer && answer.summary ? answer.summary?.passed : \"0\"}\n                </strong>\n              </span>\n            </div>\n            {answer?.long_answer?.code && (\n              <div className=\"mt-4\">\n                <strong className=\"font-bold\">{t(\"Your solution\")}:</strong>\n                <pre className=\"mt-2 bg-black text-white py-4 px-4\">\n                  {answer.long_answer.code}\n                </pre>\n              </div>\n            )}\n          </section>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default CodeExerciseResult;\n","import React from \"react\";\nimport ProgressCheck from \"../../../components/ProgressCheck\";\nimport Title from \"../../../components/Title\";\nimport { ExerciseGroups } from \"../../../models/Exercise\";\nimport { CompletionRates } from \"../service\";\n\ninterface GroupResultProps {\n  group: ExerciseGroups;\n  completionRates: CompletionRates;\n}\n\nconst GroupResult = ({ group, completionRates }: GroupResultProps) => {\n  const groupName = Object.keys(group)[0];\n  return (\n    <>\n      <Title variant={5} className=\"px-4 mt-2\">\n        {groupName}\n      </Title>\n      <div className=\"px-4 mt-4\">\n        <ProgressCheck progress={completionRates[groupName] || 0} />\n      </div>\n    </>\n  );\n};\n\nexport default GroupResult;\n","import React from \"react\";\nimport ProgressCheck from \"../../../components/ProgressCheck\";\nimport Title from \"../../../components/Title\";\nimport { TopicContentExercises } from \"../../../models/Exercise\";\nimport { CompletionRates } from \"../service\";\n\ninterface TopicResultProps {\n  topic: TopicContentExercises;\n  completionRates: CompletionRates;\n}\n\nconst TopicResult = ({ topic, completionRates }: TopicResultProps) => {\n  const topicName = Object.keys(topic)[0];\n  return (\n    <>\n      <Title variant={5} className=\"px-4 mt-2\">\n        {topicName}\n      </Title>\n      <div className=\"px-4 mt-4\">\n        <ProgressCheck progress={completionRates[topicName] || 0} />\n      </div>\n    </>\n  );\n};\n\nexport default TopicResult;\n","import React from \"react\";\nimport {\n  Exercise,\n  ExerciseGroups,\n  TopicContentExercises,\n} from \"../../../models/Exercise\";\nimport { UserAnswerSummaryMap } from \"../../../models/UserAnswerSummary\";\nimport CodeExerciseResult from \"../CodeExerciseResult\";\nimport GroupResult from \"../GroupResult\";\nimport { CompletionRates } from \"../service\";\nimport TopicResult from \"../TopicResult\";\n\ninterface ResultColumnProps {\n  data: Exercise | ExerciseGroups | TopicContentExercises | null;\n  offering: number;\n  summaryMap: UserAnswerSummaryMap;\n  completionRates: CompletionRates;\n}\n\nconst getComponent = (\n  data: any,\n  offering: number,\n  summaryMap: UserAnswerSummaryMap,\n  completionRates: CompletionRates,\n): React.ReactNode => {\n  if (!data) return null;\n\n  // Is exercise\n  if (data.slug)\n    return (\n      <CodeExerciseResult\n        offering={offering}\n        summaryMap={summaryMap}\n        exercise={data}\n      />\n    );\n\n  // Is exercise group\n  const keys = Object.keys(data);\n  if (keys && data[keys[0]]?.length)\n    return <GroupResult group={data} completionRates={completionRates} />;\n\n  // Is topic\n  const keys2 = Object.keys(data[keys[0]]);\n  if (keys && keys2 && data[keys[0]][keys2[0]]?.length)\n    return <TopicResult topic={data} completionRates={completionRates} />;\n\n  // I don't know what you are\n  return null;\n};\n\nconst ResultColumn = ({\n  data,\n  offering,\n  summaryMap,\n  completionRates,\n}: ResultColumnProps) => {\n  return <>{getComponent(data, offering, summaryMap, completionRates)}</>;\n};\n\nexport default ResultColumn;\n","import {\n  Exercise,\n  ExerciseGroups,\n  TopicContentExercises,\n} from \"../../../models/Exercise\";\nimport { UserAnswerSummaryMap } from \"../../../models/UserAnswerSummary\";\n\nexport interface CompletionRates {\n  [name: string]: number;\n}\n\nexport const extractCompletionRatesFromExercises = (\n  exercises: Exercise[],\n  answerSummaries: UserAnswerSummaryMap,\n): CompletionRates => {\n  return Object.fromEntries(\n    exercises.map((exercise) => {\n      const summary = answerSummaries[exercise.pk];\n      return [exercise.slug, summary ? summary.max_points : 0];\n    }),\n  );\n};\n\nexport const extractCompletionRatesFromExerciseGroups = (\n  exercises: ExerciseGroups,\n  answerSummaries: UserAnswerSummaryMap,\n): CompletionRates => {\n  return Object.fromEntries(\n    Object.keys(exercises).map((name) => {\n      const rates = Object.values(\n        extractCompletionRatesFromExercises(exercises[name], answerSummaries),\n      );\n      return [name, rates.reduce((a, b) => a + b, 0) / rates.length];\n    }),\n  );\n};\n\nexport const extractCompletionRatesFromTopicContents = (\n  exercises: TopicContentExercises,\n  answerSummaries: UserAnswerSummaryMap,\n): CompletionRates => {\n  return Object.assign(\n    {},\n    ...Object.keys(exercises).map((name) => {\n      const contentGroups = exercises[name];\n      const allExercises = Object.keys(contentGroups)\n        .map((groupName) => contentGroups[groupName])\n        .reduce((a, b) => {\n          if (!a && !b) return [];\n          if (!a) return b;\n          if (!b) return a;\n          return a.concat(b);\n        }, []);\n      return extractCompletionRatesFromExerciseGroups(\n        { [name]: allExercises },\n        answerSummaries,\n      );\n    }),\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport {\n  Exercise,\n  ExerciseGroups,\n  TopicContentExercises,\n} from \"../../models/Exercise\";\nimport { UserAnswerSummaryMap } from \"../../models/UserAnswerSummary\";\nimport Column from \"./Column\";\nimport ResultColumn from \"./ResultColumn\";\nimport {\n  CompletionRates,\n  extractCompletionRatesFromExerciseGroups,\n  extractCompletionRatesFromExercises,\n  extractCompletionRatesFromTopicContents,\n} from \"./service\";\n\ninterface ExerciseResultVisualizationProps {\n  exerciseGroups: TopicContentExercises;\n  summaryMap: UserAnswerSummaryMap;\n  className?: string;\n}\n\nconst ExerciseResultVisualization = ({\n  exerciseGroups,\n  summaryMap,\n  className,\n}: ExerciseResultVisualizationProps) => {\n  const { t } = useTranslation();\n  const [topic, setTopic] = useState<string>(\"\");\n  const [contentGroup, setContentGroup] = useState<string>(\"\");\n\n  const [\n    topicCompletionRates,\n    setTopicCompletionRates,\n  ] = useState<CompletionRates>({});\n  useEffect(() => {\n    setTopicCompletionRates(\n      extractCompletionRatesFromTopicContents(exerciseGroups, summaryMap),\n    );\n  }, [exerciseGroups, summaryMap]);\n\n  const [contentGroups, setContentGroups] = useState<ExerciseGroups>({});\n  const [\n    groupCompletionRates,\n    setGroupCompletionRates,\n  ] = useState<CompletionRates>({});\n  useEffect(() => {\n    const groups = topic ? exerciseGroups[topic] : {};\n    setContentGroups(groups);\n    if (groups)\n      setGroupCompletionRates(\n        extractCompletionRatesFromExerciseGroups(groups, summaryMap),\n      );\n  }, [topic, exerciseGroups, summaryMap]);\n\n  const [exercises, setExercises] = useState<string[]>([]);\n  const [\n    exerciseCompletionRates,\n    setExerciseCompletionRates,\n  ] = useState<CompletionRates>({});\n  useEffect(() => {\n    const exerciseList = contentGroups[contentGroup];\n    setExercises(\n      Object.keys(contentGroups) && contentGroup\n        ? exerciseList.map((exercise) => exercise.slug)\n        : [],\n    );\n    if (exerciseList)\n      setExerciseCompletionRates(\n        extractCompletionRatesFromExercises(exerciseList, summaryMap),\n      );\n  }, [contentGroups, contentGroup, summaryMap]);\n\n  const [selectedTopicRow, setSelectedTopicRow] = useState<number>(-1);\n  const [selectedGroupRow, setSelectedGroupRow] = useState<number>(-1);\n  const [selectedExerciseRow, setSelectedExerciseRow] = useState<number>(-1);\n  const [selectedLevel, setSelectedLevel] = useState<number>(0);\n  const [selectedData, setSelectedData] = useState<\n    Exercise | ExerciseGroups | TopicContentExercises | null\n  >(null);\n  const handleSelectTopic = (topic: string, idx: number) => {\n    setTopic(topic);\n    setSelectedData({ [topic]: exerciseGroups[topic] });\n    setContentGroup(\"\");\n    setSelectedTopicRow(idx);\n    setSelectedGroupRow(-1);\n    setSelectedExerciseRow(-1);\n    setSelectedLevel(0);\n  };\n  const handleSelectGroup = (group: string, idx: number) => {\n    setContentGroup(group);\n    setSelectedData({ [group]: contentGroups[group] });\n    setSelectedGroupRow(idx);\n    setSelectedExerciseRow(-1);\n    setSelectedLevel(1);\n  };\n  const handleSelectExercise = (slug: string, idx: number) => {\n    const exercise = contentGroups[contentGroup][idx];\n    setSelectedData(exercise);\n    setSelectedExerciseRow(idx);\n    setSelectedLevel(2);\n  };\n\n  return (\n    <div className={`grid grid-cols-6 shadow-sm ${className ? className : \"\"}`}>\n      <Column\n        title={t(\"Topic\")}\n        options={Object.keys(exerciseGroups)}\n        onSelect={handleSelectTopic}\n        completionRates={topicCompletionRates}\n        selectedRow={selectedTopicRow}\n      />\n      <Column\n        title={t(\"Content\")}\n        options={Object.keys(contentGroups)}\n        onSelect={handleSelectGroup}\n        completionRates={groupCompletionRates}\n        selectedRow={selectedGroupRow}\n      />\n      <Column\n        title={t(\"Exercises\")}\n        options={exercises}\n        onSelect={handleSelectExercise}\n        completionRates={exerciseCompletionRates}\n        selectedRow={selectedExerciseRow}\n      />\n      <div className=\"col-start-4 col-end-7 border border-gray-200 py-2\">\n        <ResultColumn\n          offering={1}\n          data={selectedData}\n          summaryMap={summaryMap}\n          completionRates={\n            [\n              topicCompletionRates,\n              groupCompletionRates,\n              exerciseCompletionRates,\n            ][selectedLevel]\n          }\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default ExerciseResultVisualization;\n","import React, { useEffect, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport Container from \"../../components/Container\";\nimport SubTitle from \"../../components/SubTitle\";\nimport Title from \"../../components/Title\";\nimport { useUser } from \"../../contexts/user-context\";\nimport ExerciseResultVisualization from \"../../fragments/ExerciseResultVisualization\";\nimport Header from \"../../fragments/Header\";\nimport {\n  groupByTopicAndContent,\n  TopicContentExercises,\n} from \"../../models/Exercise\";\nimport {\n  summaryListToMap,\n  UserAnswerSummary,\n  UserAnswerSummaryMap,\n} from \"../../models/UserAnswerSummary\";\nimport { useExerciseList, useSummaryList } from \"../../services/exercises\";\n\nconst StudentHome = () => {\n  const { t } = useTranslation();\n  const { user } = useUser();\n  const [exerciseGroups, setExerciseGroups] = useState<TopicContentExercises>(\n    {},\n  );\n\n  const token = user?.token || \"\";\n  const offering = 1;\n\n  const { exerciseList } = useExerciseList(offering, token);\n  useEffect(() => {\n    setExerciseGroups(groupByTopicAndContent(exerciseList));\n  }, [exerciseList]);\n\n  const { summaryList, loading: loadingSummaryList } = useSummaryList(\n    offering,\n    token,\n    user?.pk,\n  );\n  const [summaryMap, setSummaryMap] = useState<UserAnswerSummaryMap>({});\n  useEffect(() => {\n    if (loadingSummaryList) return;\n    setSummaryMap(summaryListToMap(summaryList));\n  }, [summaryList, loadingSummaryList]);\n\n  if (!user) return null;\n\n  return (\n    <>\n      <Header />\n      <Container>\n        <Title>{t(\"Dashboard\")}</Title>\n        <SubTitle>{`${user.firstName} ${user?.lastName}`}</SubTitle>\n\n        <section className=\"my-8\">\n          <Title variant={2}>{t(\"Exercises\")}</Title>\n          <ExerciseResultVisualization\n            exerciseGroups={exerciseGroups}\n            summaryMap={summaryMap}\n            className=\"mt-4\"\n          />\n        </section>\n      </Container>\n    </>\n  );\n};\n\nexport default StudentHome;\n","export interface Exercise {\n  pk: number;\n  slug: string;\n  url: string;\n  type: string;\n  offering: number;\n  topic: string;\n  group: string;\n}\n\nexport interface ExerciseGroups {\n  [url: string]: Exercise[];\n}\nexport const groupByURL = (exercises: Exercise[]): ExerciseGroups => {\n  const groups: ExerciseGroups = {};\n\n  exercises.forEach((exercise) => {\n    if (!groups[exercise.url]) groups[exercise.url] = [];\n    groups[exercise.url].push(exercise);\n  });\n\n  return groups;\n};\n\nexport interface TopicContentExercises {\n  [url: string]: ExerciseGroups;\n}\n\nexport const groupByTopicAndContent = (\n  exercises: Exercise[],\n): TopicContentExercises => {\n  const groups: TopicContentExercises = {};\n\n  exercises.forEach((exercise) => {\n    const { topic, group } = exercise;\n    if (!groups[topic]) groups[topic] = {};\n    if (!groups[topic][group]) groups[topic][group] = [];\n    groups[topic][group].push(exercise);\n  });\n\n  return groups;\n};\n","export interface UserAnswerSummary {\n  pk: number;\n  user: number;\n  exercise: number;\n  max_points: number;\n  answer_count: number;\n  latest: number;\n}\n\nexport interface UserAnswerSummaryMap {\n  [exercise: number]: UserAnswerSummary;\n}\n\nexport const summaryListToMap = (\n  summaryList: UserAnswerSummary[],\n): UserAnswerSummaryMap => {\n  return Object.fromEntries(\n    summaryList.map((summary) => [summary.exercise, summary]),\n  );\n};\n","import React from \"react\";\nimport { Redirect, useLocation } from \"react-router\";\nimport { useUser } from \"../../../contexts/user-context\";\nimport { routes } from \"../../../routes\";\n\nconst LoginRedirect = () => {\n  const { user } = useUser();\n  const location = useLocation();\n\n  if (!user && location.pathname !== routes.LOGIN)\n    return (\n      <Redirect\n        to={{ pathname: routes.LOGIN, search: `?next=${location.pathname}` }}\n      />\n    );\n  return null;\n};\n\nexport default LoginRedirect;\n","import React from \"react\";\nimport UserProvider from \"./user-context\";\n\nconst Contexts: React.FC = ({ children }) => {\n  return <UserProvider>{children}</UserProvider>;\n};\n\nexport default Contexts;\n","import i18n from \"i18next\";\nimport { initReactI18next } from \"react-i18next\";\nimport translationEN from \"./locales/en/translation.json\";\nimport translationPT from \"./locales/pt/translation.json\";\n\ni18n\n  .use(initReactI18next) // passes i18n down to react-i18next\n  .init({\n    // the translations\n    // (tip move them in a JSON file and import them,\n    resources: {\n      en: {\n        translation: translationEN,\n      },\n      pt: {\n        translation: translationPT,\n      },\n    },\n    lng: \"pt\",\n    fallbackLng: \"pt\",\n\n    interpolation: {\n      escapeValue: false, // react already safes from xss => https://www.i18next.com/translation-function/interpolation#unescape\n    },\n  });\n\nexport default i18n;\n","import React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport LoginRedirect from \"../components/Redirect/LoginRedirect\";\nimport Contexts from \"../contexts\";\n\nimport { routesData } from \"../routes\";\nimport \"../translations/i18n\";\n\nfunction App() {\n  return (\n    <Contexts>\n      <div className=\"App\">\n        <LoginRedirect />\n        <div>\n          <Switch>\n            {Object.entries(routesData).map(([uri, { props }], idx) => (\n              <Route key={`route__${idx}`} {...props} />\n            ))}\n          </Switch>\n        </div>\n      </div>\n    </Contexts>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\"),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"animationContainer\":\"LoadingIndicator_animationContainer__31NJQ\",\"loadingDot\":\"LoadingIndicator_loadingDot__9elUF\",\"dark\":\"LoadingIndicator_dark__VNh81\",\"light\":\"LoadingIndicator_light__1lhVC\",\"dotContainer\":\"LoadingIndicator_dotContainer__3C8Kq\"};"],"sourceRoot":""}