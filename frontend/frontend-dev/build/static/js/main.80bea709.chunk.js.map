{"version":3,"sources":["components/Separator/Separator.module.css","services/auth/index.ts","services/routes/index.ts","contexts/user-context/index.tsx","components/Container/index.tsx","components/Table/index.tsx","components/Charts/Doughnut/index.tsx","components/Button/index.tsx","components/UserMenu/index.tsx","fragments/Header/index.tsx","helpers/index.ts","services/api.ts","screens/ExerciseAnswers/index.tsx","components/Redirect/AdminRedirect/index.tsx","components/Title/index.tsx","services/requests/index.ts","services/exercises/index.ts","fragments/ExerciseDetails/index.tsx","screens/InstructorHome/index.tsx","hooks/useQuery.tsx","components/Form/Label/index.tsx","components/Form/ErrorMessage/index.tsx","components/Form/TextInput/index.tsx","components/Form/index.tsx","screens/Login/login-schema.ts","components/LoadingIndicator/index.tsx","components/Separator/index.tsx","screens/Login/LoginForm/index.tsx","fragments/SignInContainer/index.tsx","screens/Login/index.tsx","screens/PasswordChange/password-change-schema.ts","screens/PasswordChange/PasswordChangeForm/index.tsx","screens/PasswordChange/index.tsx","components/SubTitle/index.tsx","components/ProgressCheck/index.tsx","routes/index.ts","fragments/ExerciseResultVisualization/Column/index.tsx","fragments/ExerciseResultVisualization/CodeExerciseResult/index.tsx","fragments/ExerciseResultVisualization/GroupResult/index.tsx","fragments/ExerciseResultVisualization/TopicResult/index.tsx","fragments/ExerciseResultVisualization/ResultColumn/index.tsx","fragments/ExerciseResultVisualization/service/index.ts","fragments/ExerciseResultVisualization/index.tsx","screens/StudentHome/index.tsx","models/Exercise.ts","models/UserAnswerSummary.ts","components/Redirect/LoginRedirect/index.tsx","contexts/index.tsx","translations/i18n.ts","App/index.tsx","reportWebVitals.ts","index.tsx","components/LoadingIndicator/LoadingIndicator.module.css"],"names":["module","exports","login","username","password","a","axios","post","then","res","data","key","token","get","headers","Authorization","userData","pk","email","firstName","first_name","lastName","last_name","isStaff","is_staff","catch","resetPassword","uid","password1","password2","new_password1","new_password2","USER_KEY","storeUser","user","localStorage","setItem","JSON","stringify","removeItem","retrieveUser","loadedString","getItem","parse","UserContext","createContext","putUser","removeUser","useUser","useContext","UserProvider","children","useState","setUser","logUserIn","logUserOut","memoizedValue","useMemo","useEffect","loadedUser","Provider","value","Container","className","UnmemoizedTable","length","header","Object","keys","rows","map","item","values","cell","cellIndex","row","rowIndex","columnIndex","Table","memo","UnmemoizedDoughnutChart","labels","options","datasets","numSelectedOptions","backgroundColor","borderColor","borderWidth","maintainAspectRatio","Doughnut","Button","onClick","variant","type","disabled","variantClasses","primary","secondary","hidden","defaultProps","UserMenu","t","useTranslation","logout","to","routes","LOGIN","Header","navRoutes","uri","routeData","routesData","permissionTest","title","dynamicPathname","route","params","entries","regexp","RegExp","replace","String","api","create","baseURL","interceptors","request","use","config","ExerciseAnswers","useParams","offering","slug","answers","setAnswers","textAnswers","filter","answer","long_answer","timestamp","submission_date","summary","long","testsAnswers","isMounted","optionsAmount","num_choices","choices","choice","selectedOptionsCount","forEach","option","INSTRUCTOR_HOME","Date","toLocaleString","console","log","AdminRedirect","location","useLocation","pathname","search","Title","Component","textSize","marginTop","indexOf","useGetRequest","url","initialValue","skip","setData","error","setError","loading","setLoading","refreshRequested","setRefreshRequested","refresh","useCallback","mounted","undefined","reason","finally","handleRequest","useExerciseList","exerciseList","ExerciseDetails","exerciseSlug","query","summaryList","useSummaryListForExercise","refreshSummaryList","numSubmissions","setNumSubmissions","numUniqueUsers","setNumUniqueUsers","lastRefresh","setLastRefresh","answerSummary","answer_count","reduce","b","answersRoute","EXERCISE_ANSWERS","total","users","lastUpdate","InstructorHome","URLSearchParams","Label","htmlFor","ErrorMessage","TextInput","forwardRef","props","ref","label","placeholder","inputId","name","otherProps","id","Form","schema","yup","shape","required","ContainerVariants","initial","transition","staggerChildren","animate","DotVariants","y","DotTransition","duration","repeat","Infinity","repeatType","ease","LoadingIndicator","light","dotClasses","styles","loadingDot","dark","animationContainer","motion","div","dotContainer","variants","span","Separator","separator","LoginForm","useRef","current","useQuery","invalidLogin","setInvalidLogin","useForm","resolver","yupResolver","register","handleSubmit","errors","formState","onUsernameChange","onChange","usernameInputProps","onPasswordChange","passwordInputProps","onSubmit","e","message","SignInContainer","src","alt","Login","history","useHistory","redirectTo","decodedRedirectTo","decodeURIComponent","newHref","window","href","passwordConfirmation","test","this","parent","PasswordChangeForm","firstTime","invalidLink","setInvalidLink","onPasswordConfirmationChange","passwordConfirmationInputProps","success","push","PasswordChange","pathParams","matchPath","PASSWORD_RESET","SubTitle","ProgressCheck","progress","Math","PI","checkLength","sqrt","circleVariants","start","strokeDashoffset","checkVariants","delay","width","height","viewBox","version","xmlns","r","cx","cy","fill","stroke","strokeWidth","circle","transform","strokeDasharray","path","d","Column","onSelect","completionRates","selectedRow","idx","handleClick","CodeExerciseResult","summaryMap","exercise","answerId","useAnswer","latest","round","max_points","passed","code","GroupResult","group","groupName","TopicResult","topic","topicName","getComponent","keys2","ResultColumn","extractCompletionRatesFromExercises","exercises","answerSummaries","fromEntries","extractCompletionRatesFromExerciseGroups","rates","ExerciseResultVisualization","exerciseGroups","setTopic","contentGroup","setContentGroup","topicCompletionRates","setTopicCompletionRates","assign","contentGroups","allExercises","concat","extractCompletionRatesFromTopicContents","setContentGroups","groupCompletionRates","setGroupCompletionRates","groups","setExercises","exerciseCompletionRates","setExerciseCompletionRates","selectedTopicRow","setSelectedTopicRow","selectedGroupRow","setSelectedGroupRow","selectedExerciseRow","setSelectedExerciseRow","selectedLevel","setSelectedLevel","selectedData","setSelectedData","StudentHome","setExerciseGroups","groupByTopicAndContent","useSummaryList","loadingSummaryList","setSummaryMap","summaryListToMap","STUDENT_HOME","exact","component","LoginRedirect","Contexts","i18n","initReactI18next","init","resources","en","translation","translationEN","pt","translationPT","lng","fallbackLng","interpolation","escapeValue","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.80bea709.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"separator\":\"Separator_separator__e39e6\"};","import axios from \"axios\";\nimport { IUser } from \"../../models/User\";\nimport { LOGIN_PATH, PASSWORD_RESET_PATH, USER_DATA_PATH } from \"../routes\";\n\nexport const login = async (\n  username: string,\n  password: string,\n): Promise<IUser | null> => {\n  return axios\n    .post(LOGIN_PATH, { username, password })\n    .then((res) => res.data.key)\n    .then(async (token) => {\n      return axios\n        .get(USER_DATA_PATH, {\n          headers: {\n            Authorization: `Token ${token}`,\n          },\n        })\n        .then((res) => res.data)\n        .then((userData) => {\n          return {\n            pk: userData.pk,\n            username: userData.username,\n            email: userData.email,\n            firstName: userData.first_name,\n            lastName: userData.last_name,\n            isStaff: userData.is_staff,\n            token,\n          };\n        })\n        .catch(() => null);\n    })\n    .catch(() => null);\n};\n\nexport const resetPassword = async (\n  uid: string,\n  token: string,\n  password1: string,\n  password2: string,\n): Promise<boolean> => {\n  return axios\n    .post(PASSWORD_RESET_PATH, {\n      uid,\n      token,\n      new_password1: password1,\n      new_password2: password2,\n    })\n    .then(() => true)\n    .catch(() => false);\n};\n\nconst USER_KEY = \"devlife-user-data\";\nexport const storeUser = (user: IUser | null) => {\n  if (!!user) localStorage.setItem(USER_KEY, JSON.stringify(user));\n  else localStorage.removeItem(USER_KEY);\n};\nexport const retrieveUser = (): IUser | null => {\n  const loadedString = localStorage.getItem(USER_KEY);\n  if (!!loadedString) return JSON.parse(loadedString);\n  return null;\n};\n","// AUTHENTICATION\nexport const USER_DATA_PATH = \"/api/auth/user/\";\nexport const LOGIN_PATH = \"/api/auth/login/\";\nexport const PASSWORD_RESET_PATH = \"/api/auth/password/reset/confirm/\";\n\n// EXERCISES\nexport const LIST_EXERCISES = \"/api/offerings/:offering/exercises/\";\nexport const EXERCISE_ANSWER =\n  \"/api/offerings/:offering/exercises/:exerciseSlug/answers/:answerId/\";\nexport const LIST_EXERCISE_ANSWERS =\n  \"/api/offerings/:offering/exercises/:slug/answers/\";\n\nexport const LIST_EXERCISES_SUMMARIES = \"/api/offerings/:offering/summaries/\";\nexport const EXERCISE_SUMMARY =\n  \"/api/offerings/:offering/summaries/:exerciseSlug/\";\n","import React, {\n  createContext,\n  useState,\n  useMemo,\n  useContext,\n  useEffect,\n  ReactNode,\n} from \"react\";\nimport { IUser } from \"../../models/User\";\nimport { retrieveUser, storeUser } from \"../../services/auth\";\n\ninterface IUserContextType {\n  user: IUser | null;\n  putUser: (user: IUser) => void;\n  removeUser: () => void;\n}\n\nexport const UserContext = createContext<IUserContextType>({\n  user: null,\n  putUser: () => {},\n  removeUser: () => {},\n});\n\nconst UserProvider = ({ children }: { children: ReactNode }) => {\n  const [user, setUser] = useState<IUser | null>(retrieveUser());\n\n  const logUserIn = (user: IUser) => {\n    storeUser(user);\n    setUser(user);\n  };\n  const logUserOut = () => {\n    storeUser(null);\n    setUser(null);\n  };\n  const memoizedValue = useMemo(\n    () => ({ user, putUser: logUserIn, removeUser: logUserOut }),\n    [user],\n  );\n\n  useEffect(() => {\n    if (!user) {\n      const loadedUser: IUser | null = retrieveUser();\n      if (!!loadedUser) logUserIn(loadedUser);\n    }\n  }, [user]);\n\n  return (\n    <UserContext.Provider\n      value={{\n        user: memoizedValue.user,\n        putUser: memoizedValue.putUser,\n        removeUser: memoizedValue.removeUser,\n      }}>\n      {children}\n    </UserContext.Provider>\n  );\n};\n\nexport const useUser = (): IUserContextType => {\n  const { user, putUser, removeUser } = useContext(UserContext);\n  return { user, putUser, removeUser };\n};\n\nexport default UserProvider;\n","import React, { HTMLProps } from \"react\";\n\nconst Container = ({ className, children }: HTMLProps<HTMLDivElement>) => {\n  return <div className={`mx-4 ${className}`}>{children}</div>;\n};\n\nexport default Container;\n","import { memo, ReactNode } from \"react\";\n\ninterface ITableProps {\n  data: Record<string, ReactNode>[];\n}\n\nfunction UnmemoizedTable({ data }: ITableProps) {\n  if (!data.length) {\n    return null;\n  }\n\n  const header = Object.keys(data[0]);\n  const rows = data.map((item) => Object.values(item));\n\n  return (\n    <div className=\"flex m-2\">\n      <div className=\"overflow-x-auto no-scrollbar max-w-full\">\n        <div className=\"align-middle inline-block\">\n          <div className=\"border-b border-gray-200 rounded-lg overflow-hidden border\">\n            <table className=\"divide-y divide-gray-200\">\n              <thead className=\"bg-gray-50\">\n                <tr>\n                  {header.map((cell, cellIndex) => (\n                    <th key={\"header__\" + cellIndex} className=\"p-3\">\n                      {cell}\n                    </th>\n                  ))}\n                </tr>\n              </thead>\n\n              <tbody className=\"bg-white divide-y divide-gray-50\">\n                {rows.map((row, rowIndex) => (\n                  <tr\n                    key={\"textAnswers__\" + rowIndex}\n                    className={!!(rowIndex % 2) ? \"bg-gray-100\" : \"bg-gray-50\"}>\n                    {row.map((cell, columnIndex) => (\n                      <td\n                        key={`cell__${columnIndex}${rowIndex}`}\n                        className=\"px-6 py-4 whitespace-nowrap\">\n                        {cell ?? \"\"}\n                      </td>\n                    ))}\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\n/**\n * usage:\n * \n * ```typescript\n * const data = [\n *   { h1: \"cell 00\", h2: \"cell 10\", h3: \"cell 20\" },\n *   { h1: \"cell 01\", h2: \"cell 11\", h3: \"cell 21\" },\n *   { h1: \"cell 02\", h2: \"cell 12\", h3: \"cell 22\" },\n * ]\n * ```\n *\n * ```typescriptreact\n * <Table data={data} />\n * ```\n *\n * To render:\n *\n    | h1      | h2      | h3       |\n    |---------|---------|----------|\n    | cell 00 | cell 10 | cell 20  |\n    | cell 01 | cell 11 | cell 21  |\n    | cell 02 | cell 12 | cell 22  |\n */\nexport const Table = memo(UnmemoizedTable);\n","import { memo } from \"react\";\nimport { Doughnut as DoughnutChartJS } from \"react-chartjs-2\";\n\ninterface IProps {\n  options: string[];\n  numSelectedOptions: number[];\n}\n\nfunction UnmemoizedDoughnutChart({ options, numSelectedOptions }: IProps) {\n  const data = {\n    labels: options,\n    datasets: [\n      {\n        data: numSelectedOptions,\n        backgroundColor: [\n          \"#ff638433\",\n          \"#76f25d33\",\n          \"#36a2eb33\",\n          \"#ffce5633\",\n          \"#765df233\",\n          \"#21fcf233\",\n          \"#ff9f4033\",\n        ],\n        borderColor: [\n          \"#ff6384\",\n          \"#76f25d\",\n          \"#36a2eb\",\n          \"#ffce56\",\n          \"#765df2\",\n          \"#21fcf2\",\n          \"#ff9f40\",\n        ],\n        borderWidth: 2,\n      },\n    ],\n  };\n\n  return (\n    <div className=\"sm:w-2/3 md:w-1/3 lg:w-1/4\">\n      <DoughnutChartJS data={data} options={{ maintainAspectRatio: true }} />\n    </div>\n  );\n}\n\nexport const Doughnut = memo(UnmemoizedDoughnutChart);\n","import React, { HTMLProps } from \"react\";\n\ninterface IButtonProps {\n  className: string;\n  variant: \"primary\" | \"secondary\" | \"hidden\";\n  type: \"button\" | \"submit\" | \"reset\" | undefined;\n}\n\nconst defaultProps = {\n  className: \"\",\n  variant: \"primary\",\n  type: \"button\",\n};\n\nconst Button = ({\n  onClick,\n  variant,\n  children,\n  type,\n  disabled,\n  className,\n}: IButtonProps & HTMLProps<HTMLButtonElement>) => {\n  const variantClasses = {\n    primary: disabled\n      ? \"bg-gray-300 text-gray-500 cursor-default\"\n      : \"bg-primary hover:bg-primary-500 text-white\",\n    secondary: disabled\n      ? \"bg-gray-300 text-gray-500 cursor-default\"\n      : \"bg-secondary hover:bg-secondary-500 text-white\",\n    hidden: disabled\n      ? \"bg-transparent text-gray-500 cursor-default\"\n      : \"bg-transparent\",\n  }[variant];\n\n  return (\n    <button\n      className={`${className} ${variantClasses} font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline flex justify-center items-center`}\n      onClick={onClick}\n      type={type}\n      disabled={disabled}>\n      {children}\n    </button>\n  );\n};\n\nButton.defaultProps = defaultProps;\n\nexport default Button;\n","import React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { Link } from \"react-router-dom\";\nimport { useUser } from \"../../contexts/user-context\";\nimport { routes } from \"../../routes\";\nimport Button from \"../Button\";\n\nconst UserMenu = () => {\n  const { t } = useTranslation();\n  const { user, removeUser: logout } = useUser();\n\n  return (\n    <>\n      {!user && <Link to={routes.LOGIN}>{t(\"Login\")}</Link>}\n      {!!user && (\n        <Button variant=\"hidden\" onClick={logout}>\n          {t(\"Logout\")}\n        </Button>\n      )}\n    </>\n  );\n};\n\nexport default UserMenu;\n","import React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { Link } from \"react-router-dom\";\nimport UserMenu from \"../../components/UserMenu\";\nimport { useUser } from \"../../contexts/user-context\";\nimport { navRoutes, routesData } from \"../../routes\";\n\nconst Header = () => {\n  const { t } = useTranslation();\n  const { user } = useUser();\n\n  return (\n    <nav className=\"py-2 px-4\">\n      <ul className=\"flex items-center\">\n        <li className=\"uppercase font-bold\">\n          <Link to=\"/\">{t(\"Developer Life\")}</Link>\n        </li>\n        {navRoutes.map((uri) => {\n          const routeData = routesData[uri];\n          if (routeData.permissionTest && !routeData.permissionTest(user))\n            return null;\n          const title = routeData.title;\n          return (\n            <li key={`nav__${uri}`} className=\"ml-4\">\n              <Link to={uri}>{t(title)}</Link>\n            </li>\n          );\n        })}\n        <li className=\"ml-auto\">\n          <UserMenu />\n        </li>\n      </ul>\n    </nav>\n  );\n};\n\nexport default Header;\n","/**\n *\n * @param route Dynamic route. Ex:\n * ```typescript\n *    \"/api/offerings/:off_pk/exercises/:ex_slug/answers/\"\n * ```\n * @param params Object with dynamic params. Ex:\n * ```typescript\n * {off_pk: 1, ex_slug: 'quiz-0'})\n * ```\n * @returns Properly filled route\n * ```typescript\n * \"/api/offerings/1/exercises/quiz-0/answers\"\n * ```\n */\nexport function dynamicPathname(route: string, params: Record<string, string|number>) {\n  for (let [key, value] of Object.entries(params)) {\n    const regexp = new RegExp(`:${key}`, \"g\");\n    route = route.replace(regexp, String(value));\n  }\n  return route;\n}\n","import axios, { AxiosRequestConfig } from \"axios\";\nimport { retrieveUser } from \"./auth\";\n\nexport const api = axios.create({\n  baseURL: \"/\"\n});\n\nfunction preRequest(config: AxiosRequestConfig) {\n  const user = retrieveUser();\n  if (user) {\n    config.headers = { ...config.headers, Authorization: `Token ${user.token}` };\n  } else {\n    // handle \"not signed in\" case for current user\n    // what should happen if current user tries to make an \n    // authenticaded api call without credentials?\n  }\n  return config;\n}\n\napi.interceptors.request.use(preRequest);\n","import { useEffect, useMemo, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useParams } from \"react-router\";\nimport { Link } from \"react-router-dom\";\nimport Container from \"../../components/Container\";\nimport { Table } from \"../../components/Table\";\nimport { Bars, Doughnut } from \"../../components/Charts\";\nimport Header from \"../../fragments/Header\";\nimport { dynamicPathname } from \"../../helpers\";\nimport { routes } from \"../../routes\";\nimport { api } from \"../../services/api\";\nimport { LIST_EXERCISE_ANSWERS } from \"../../services/routes\";\nimport Button from \"../../components/Button\";\n\ninterface IExerciseAnswersParams {\n  offering: string;\n  slug: string;\n}\n\ninterface ISummary {\n  choice: number;\n  num_choices: number;\n}\ninterface IAnswer {\n  pk: number;\n  user: number;\n  exercise: number;\n  points: number;\n  submission_date: string;\n  summary?: ISummary;\n  long_answer?: string;\n}\n\nfunction ExerciseAnswers() {\n  const { t } = useTranslation();\n  const { offering, slug } = useParams<IExerciseAnswersParams>();\n  const [answers, setAnswers] = useState<IAnswer[]>([]);\n\n  const textAnswers = useMemo(() => {\n    return answers\n      .filter((answer) => typeof answer.long_answer === \"string\")\n      .map((answer) => ({\n        timestamp: answer.submission_date,\n        summary: answer.summary,\n        long: answer.long_answer,\n      }));\n  }, [answers]);\n\n  const testsAnswers = useMemo(() => {\n    return answers\n      .filter((answer) => !!(typeof answer.summary !== \"string\"))\n      .map((answer) => answer.summary);\n  }, [answers]);\n\n  useEffect(() => {\n    let isMounted = true; // prevent memory leak\n\n    api\n      .get<IAnswer[]>(\n        dynamicPathname(LIST_EXERCISE_ANSWERS, { offering, slug })\n      )\n      .then((res) => {\n        if (isMounted) {\n          setAnswers(res.data || []);\n        }\n      });\n\n    return () => {\n      isMounted = false;\n    };\n  }, []);\n\n  const optionsAmount = useMemo(() => {\n    let optionsAmount;\n    optionsAmount = testsAnswers[0]?.num_choices || 0;\n    return optionsAmount;\n  }, [testsAnswers]);\n\n  // options: A, B, C...\n  const [options, selectedOptionsCount] = useMemo(() => {\n    const options = [...\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"];\n    options.length = optionsAmount;\n\n    const choices = testsAnswers.map((answer) => options[answer?.choice || 0]);\n\n    const selectedOptionsCount: Record<string, number> = {};\n    options.forEach((option) => {\n      selectedOptionsCount[option] = choices.filter(\n        (choice) => choice === option\n      ).length;\n    });\n    return [options, Object.values(selectedOptionsCount)];\n  }, [testsAnswers, optionsAmount]);\n\n  return (\n    <Container>\n      <Header />\n\n      <Link\n        to={routes.INSTRUCTOR_HOME}\n        className=\"bg-gray-100 text-blue-500 px-4 py-2\">\n        <b>{t(\"Go back\")}</b>\n      </Link>\n\n      <div className=\"my-4 p-4 fit-content\">\n        <p className=\"mr-4\">\n          <b>{t(\"Offering\")}:</b> {offering}\n        </p>\n        <p className=\"mr-4\">\n          <b>{t(\"Exercise slug\")}:</b> {slug}\n        </p>\n        <p>\n          <b>{t(\"Multiple choices answers\")}:</b> {testsAnswers.length}\n        </p>\n        <p>\n          <b>{t(\"Text answers\")}:</b> {textAnswers.length}\n        </p>\n      </div>\n\n      {!!testsAnswers.length && (\n        <Doughnut options={options} numSelectedOptions={selectedOptionsCount} />\n      )}\n\n      {!!textAnswers.length && (\n        <Table\n          data={textAnswers.map((answer) => ({\n            [t(\"Submission time\")]: new Date(answer.timestamp).toLocaleString(),\n            [t(\"Summary\")]: answer.summary,\n            [t(\"Long answer\")]: (\n              <Button\n                variant=\"primary\"\n                onClick={() => {\n                  console.log(answer.long);\n                }}>\n                click me\n              </Button>\n            ),\n          }))}\n        />\n      )}\n    </Container>\n  );\n}\n\nexport default ExerciseAnswers;\n","import React from \"react\";\nimport { Redirect, useLocation } from \"react-router\";\nimport { useUser } from \"../../../contexts/user-context\";\nimport { routes } from \"../../../routes\";\n\nconst AdminRedirect = () => {\n  const { user } = useUser();\n  const location = useLocation();\n\n  if (!!user && !user.isStaff)\n    return (\n      <Redirect\n        to={{\n          pathname: routes.LOGIN,\n          search: `?next=${location.pathname}&reason=not-admin`,\n        }}\n      />\n    );\n  return null;\n};\n\nexport default AdminRedirect;\n","import React, { HTMLProps } from \"react\";\n\ninterface ITitleProps {\n  variant: 1 | 2 | 5;\n}\n\nconst defaultProps = {\n  variant: 1,\n};\n\nconst Title = ({\n  variant,\n  children,\n  className,\n}: HTMLProps<HTMLHeadingElement> & ITitleProps & typeof defaultProps) => {\n  const Component = variant === 5 ? \"h5\" : variant === 2 ? \"h2\" : \"h1\";\n  const textSize = variant === 5 ? \"\" : variant === 2 ? \"text-2xl\" : \"text-4xl\";\n  const marginTop =\n    !className || (className.indexOf(\"mt-\") < 0 && className.indexOf(\"my-\") < 0)\n      ? \"mt-4\"\n      : \"\";\n\n  return (\n    <Component\n      className={`${\n        className || \"\"\n      } uppercase font-bold ${textSize} leading-none tracking-wide ${marginTop}`}>\n      {children}\n    </Component>\n  );\n};\nTitle.defaultProps = defaultProps;\n\nexport default Title;\n","import axios from \"axios\";\nimport { useCallback, useEffect, useRef, useState } from \"react\";\n\nexport const useGetRequest = <T>(\n  url: string,\n  initialValue: T,\n  token?: string,\n  skip?: boolean,\n) => {\n  const [data, setData] = useState<T>(initialValue);\n  const [error, setError] = useState();\n  const [loading, setLoading] = useState(true);\n  const [refreshRequested, setRefreshRequested] = useState(false);\n\n  const refresh = useCallback(() => {\n    setRefreshRequested(true);\n  }, [setRefreshRequested]);\n  useEffect(() => {\n    let mounted = true;\n    const handleRequest = () => {\n      const params: any = {};\n      if (!!token) params[\"headers\"] = { Authorization: `Token ${token}` };\n\n      setLoading(true);\n      setError(undefined);\n      axios\n        .get(url, params)\n        .then((res) => res.data)\n        .then((data) => mounted && setData(data))\n        .catch((reason) => mounted && setError(reason))\n        .finally(() => mounted && setLoading(false));\n    };\n\n    if (!skip || refreshRequested) {\n      if (refreshRequested) setRefreshRequested(false);\n      handleRequest();\n    }\n    return () => {\n      mounted = false;\n    };\n  }, [url, token, skip, refreshRequested]);\n\n  return { data, error, loading, refresh };\n};\n","import { dynamicPathname } from \"../../helpers\";\nimport { IAnswer } from \"../../models/Answer\";\nimport { IExercise } from \"../../models/Exercise\";\nimport { IUserAnswerSummary } from \"../../models/UserAnswerSummary\";\nimport { useGetRequest } from \"../requests\";\nimport {\n  EXERCISE_ANSWER,\n  EXERCISE_SUMMARY,\n  LIST_EXERCISES,\n  LIST_EXERCISES_SUMMARIES\n} from \"../routes\";\n\nexport const useExerciseList = (offering: number, token: string) => {\n  const { data, error, loading, refresh } = useGetRequest<IExercise[]>(\n    dynamicPathname(LIST_EXERCISES, { offering: String(offering) }),\n    [],\n    token\n  );\n  return { exerciseList: data, error, loading, refresh };\n};\n\nexport const useAnswer = (\n  offering: number,\n  token: string,\n  exerciseSlug: string,\n  answerId: number\n) => {\n  const { data, error, loading, refresh } = useGetRequest<IAnswer | null>(\n    dynamicPathname(EXERCISE_ANSWER, { offering, exerciseSlug, answerId }),\n    null,\n    token,\n    !(exerciseSlug && token && answerId !== undefined && offering !== undefined)\n  );\n  return { answer: data, error, loading, refresh };\n};\n\nexport const useSummaryList = (\n  offering: number,\n  token: string,\n  user?: number\n) => {\n  const query = user ? `?user=${user}` : \"\";\n  const { data, error, loading, refresh } = useGetRequest<IUserAnswerSummary[]>(\n    `${dynamicPathname(LIST_EXERCISES_SUMMARIES, { offering })}${query}`,\n    [],\n    token\n  );\n  return { summaryList: data, error, loading, refresh };\n};\n\nexport const useSummaryListForExercise = (\n  offering: number,\n  exerciseSlug: string,\n  token: string,\n  user?: number\n) => {\n  const query = user ? `?user=${user}` : \"\";\n  const { data, error, loading, refresh } = useGetRequest<IUserAnswerSummary[]>(\n    `${dynamicPathname(EXERCISE_SUMMARY, {\n      offering,\n      exerciseSlug\n    })}${query}`,\n    [],\n    token\n  );\n  return { summaryList: data, error, loading, refresh };\n};\n","import { useEffect, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { Link } from \"react-router-dom\";\nimport Button from \"../../components/Button\";\nimport { useUser } from \"../../contexts/user-context\";\nimport { dynamicPathname } from \"../../helpers\";\nimport { routes } from \"../../routes\";\nimport { useSummaryListForExercise } from \"../../services/exercises\";\n\ninterface IExerciseDetailsProps {\n  offering: number;\n  slug: string;\n}\n\nconst ExerciseDetails = ({ offering, slug }: IExerciseDetailsProps) => {\n  const { user } = useUser();\n  const token = user?.token || \"\";\n  const {\n    summaryList,\n    loading,\n    refresh: refreshSummaryList,\n  } = useSummaryListForExercise(offering, slug, token);\n\n  const { t } = useTranslation();\n\n  const [numSubmissions, setNumSubmissions] = useState<number>(0);\n  const [numUniqueUsers, setNumUniqueUsers] = useState<number>(0);\n  const [lastRefresh, setLastRefresh] = useState<Date>();\n\n  useEffect(() => {\n    if (loading) return;\n    setNumUniqueUsers(summaryList.length);\n    setNumSubmissions(\n      summaryList\n        .map((answerSummary) => answerSummary.answer_count)\n        .reduce((a, b) => a + b, 0)\n    );\n    setLastRefresh(new Date());\n  }, [loading, summaryList]);\n\n  const answersRoute = dynamicPathname(routes.EXERCISE_ANSWERS, {\n    offering,\n    slug,\n  });\n\n  return (\n    <div className=\"bg-gray-100 p-4 flex flex-col\">\n      <div className=\"flex-grow\">\n        <p> {slug} </p>\n        {!!lastRefresh && (\n          <p>\n            {t(\"submissions sent before\", {\n              total: numSubmissions,\n              users: numUniqueUsers,\n              lastUpdate: lastRefresh?.toLocaleString(),\n            })}\n          </p>\n        )}\n      </div>\n      <div className=\"flex flex-row mt-4 justify-around\">\n        <Link to={answersRoute}>\n          <Button>{t(\"See details\")}</Button>\n        </Link>\n        <Button onClick={refreshSummaryList}>{t(\"Reload\")}</Button>\n      </div>\n    </div>\n  );\n};\n\nexport default ExerciseDetails;\n","import { useTranslation } from \"react-i18next\";\nimport Container from \"../../components/Container\";\nimport AdminRedirect from \"../../components/Redirect/AdminRedirect\";\nimport Title from \"../../components/Title\";\nimport { useUser } from \"../../contexts/user-context\";\nimport ExerciseDetails from \"../../fragments/ExerciseDetails\";\nimport Header from \"../../fragments/Header\";\nimport { IExercise } from \"../../models/Exercise\";\nimport { useExerciseList } from \"../../services/exercises\";\n\nconst InstructorHome = () => {\n  const { t } = useTranslation();\n  const { user } = useUser();\n\n  const token = user?.token || \"\";\n  const offering = 1;\n\n  const { exerciseList } = useExerciseList(offering, token);\n\n  return (\n    <>\n      <AdminRedirect />\n      <Header />\n      <Container>\n        <Title>{t(\"Instructor Dashboard\")}</Title>\n        <div className=\"grid gap-1 grid-cols-3 mt-4\">\n          {exerciseList.map((item: IExercise) => (\n            <ExerciseDetails\n              key={`exercise-${item.slug}`}\n              offering={offering}\n              slug={item.slug}\n            />\n          ))}\n        </div>\n      </Container>\n    </>\n  );\n};\n\nexport default InstructorHome;\n","import { useLocation } from \"react-router\";\n\nexport default (): URLSearchParams => {\n  return new URLSearchParams(useLocation().search);\n};\n","import React, { HTMLProps } from \"react\";\n\nconst Label = ({ htmlFor, children }: HTMLProps<HTMLLabelElement>) => {\n  return (\n    <label\n      htmlFor={htmlFor}\n      className=\"block text-gray-700 text-sm font-bold mb-1\">\n      {children}\n    </label>\n  );\n};\n\nexport default Label;\n","import React, { ReactNode } from \"react\";\n\ninterface IErrorMessageProps {\n  children: ReactNode;\n}\n\nconst ErrorMessage = ({ children }: IErrorMessageProps) => {\n  return <p className=\"text-red-500 text-xs italic\">{children}</p>;\n};\n\nexport default ErrorMessage;\n","import React, { forwardRef, HTMLProps } from \"react\";\nimport ErrorMessage from \"../ErrorMessage\";\nimport Label from \"../Label\";\n\ninterface ITextInputProps {\n  inputId: string;\n  label?: string;\n  placeholder?: string;\n  type?: string;\n  error?: string;\n}\n\nconst defaultProps = {\n  type: \"text\",\n};\n\nconst TextInput = forwardRef<\n  HTMLInputElement,\n  ITextInputProps & HTMLProps<HTMLInputElement>\n>((props, ref) => {\n  const {\n    error,\n    label,\n    placeholder,\n    inputId,\n    name,\n    type,\n    ...otherProps\n  } = props;\n  return (\n    <div className=\"mb-4\">\n      {label && <Label htmlFor={inputId}>{label}</Label>}\n      <input\n        className={`appearance-none border ${\n          error ? \"border-red-500\" : \"border-gray-300\"\n        } rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline`}\n        id={inputId}\n        type={type}\n        name={name}\n        ref={ref}\n        placeholder={placeholder || \"\"}\n        {...otherProps}\n      />\n      {error && <ErrorMessage>{error}</ErrorMessage>}\n    </div>\n  );\n});\n\nTextInput.defaultProps = defaultProps;\n\nexport default TextInput;\n","import React, { HTMLProps } from \"react\";\nimport Label from \"./Label\";\nimport TextInput from \"./TextInput\";\n\nconst Form = (props: HTMLProps<HTMLFormElement>) => {\n  return <form {...props} />;\n};\n\nForm.Label = Label;\nForm.TextInput = TextInput;\n\nexport default Form;\n","import * as yup from \"yup\";\n\nexport interface ILoginInputs {\n  username: string;\n  password: string;\n}\n\nexport const schema = yup.object().shape({\n  username: yup.string().required(),\n  password: yup.string().required(),\n});\n","import React from \"react\";\nimport { motion, Transition, Variants } from \"framer-motion\";\nimport styles from \"./LoadingIndicator.module.css\";\n\nconst ContainerVariants = {\n  initial: {\n    transition: {\n      staggerChildren: 0.2,\n    },\n  },\n  animate: {\n    transition: {\n      staggerChildren: 0.2,\n    },\n  },\n};\n\nconst DotVariants: Variants = {\n  initial: {\n    y: \"0%\",\n  },\n  animate: {\n    y: \"100%\",\n  },\n};\n\nconst DotTransition: Transition = {\n  duration: 0.5,\n  repeat: Infinity,\n  repeatType: \"reverse\",\n  ease: \"easeInOut\",\n};\n\ninterface ILoadingIndicatorProps {\n  className?: string;\n  light?: boolean;\n}\n\nconst LoadingIndicator = ({ light, className }: ILoadingIndicatorProps) => {\n  const dotClasses = `${styles.loadingDot} ${\n    light ? styles.light : styles.dark\n  }`;\n  return (\n    <div className={`${className || \"\"} ${styles.animationContainer}`}>\n      <motion.div\n        className={styles.dotContainer}\n        variants={ContainerVariants}\n        initial=\"initial\"\n        animate=\"animate\">\n        <motion.span\n          className={dotClasses}\n          variants={DotVariants}\n          transition={DotTransition}\n        />\n        <motion.span\n          className={dotClasses}\n          variants={DotVariants}\n          transition={DotTransition}\n        />\n        <motion.span\n          className={dotClasses}\n          variants={DotVariants}\n          transition={DotTransition}\n        />\n      </motion.div>\n    </div>\n  );\n};\n\nexport default LoadingIndicator;\n","import React from \"react\";\nimport styles from \"./Separator.module.css\";\n\ninterface ISeparatorProps {\n  children: React.ReactNode;\n}\n\nconst Separator = ({ children }: ISeparatorProps) => {\n  return (\n    <div className={`uppercase ${styles.separator}`}>\n      <span>{children || \"\"}</span>\n    </div>\n  );\n};\n\nexport default Separator;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport Form from \"../../../components/Form\";\nimport { useTranslation } from \"react-i18next\";\nimport Button from \"../../../components/Button\";\nimport { schema, ILoginInputs } from \"../login-schema\";\nimport { login } from \"../../../services/auth\";\nimport ErrorMessage from \"../../../components/Form/ErrorMessage\";\nimport LoadingIndicator from \"../../../components/LoadingIndicator\";\nimport Separator from \"../../../components/Separator\";\nimport { useUser } from \"../../../contexts/user-context\";\nimport useQuery from \"../../../hooks/useQuery\";\n\nconst LoginForm = () => {\n  const mounted = useRef(true);\n  useEffect(() => {\n    return () => {\n      mounted.current = false;\n    };\n  }, []);\n\n  const params = useQuery();\n  const reason = params.get(\"reason\");\n\n  const [invalidLogin, setInvalidLogin] = useState<boolean>(false);\n  const [loading, setLoading] = useState<boolean>(false);\n  const { t } = useTranslation();\n  const { putUser } = useUser();\n\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm<ILoginInputs>({\n    resolver: yupResolver(schema),\n  });\n\n  const onSubmit = (data: ILoginInputs) => {\n    setLoading(true);\n    login(data.username, data.password)\n      .then((user) => {\n        if (!mounted.current) return;\n        if (!user) setInvalidLogin(true);\n        else {\n          putUser(user);\n        }\n      })\n      .finally(() => mounted.current && setLoading(false));\n  };\n\n  const { onChange: onUsernameChange, ...usernameInputProps } =\n    register(\"username\");\n  const handleUsernameChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setInvalidLogin(false);\n    onUsernameChange(e);\n  };\n\n  const { onChange: onPasswordChange, ...passwordInputProps } =\n    register(\"password\");\n  const handlePasswordChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setInvalidLogin(false);\n    onPasswordChange(e);\n  };\n\n  return (\n    <>\n      <Form onSubmit={handleSubmit(onSubmit)}>\n        <Form.TextInput\n          label={t(\"Username\")}\n          inputId=\"username\"\n          placeholder={t(\"Type username\")}\n          {...usernameInputProps}\n          onChange={handleUsernameChange}\n          error={t(errors?.username?.message || \"\")}\n        />\n        <Form.TextInput\n          label={t(\"Password\")}\n          inputId=\"password\"\n          type=\"password\"\n          placeholder={t(\"Password\")}\n          {...passwordInputProps}\n          onChange={handlePasswordChange}\n          error={t(errors?.password?.message || \"\")}\n        />\n        {invalidLogin && (\n          <ErrorMessage>{t(\"Invalid credentials\")}</ErrorMessage>\n        )}\n        {!!reason && <ErrorMessage>{t(reason || \"\")}</ErrorMessage>}\n        <Button\n          variant=\"secondary\"\n          className=\"mt-2 w-full\"\n          type=\"submit\"\n          disabled={loading}>\n          {t(\"Sign in\")}\n        </Button>\n        {loading && (\n          <div className=\"w-full flex justify-center\">\n            <LoadingIndicator className=\"text-xs\" />\n          </div>\n        )}\n      </Form>\n      <Separator>{t(\"or\")}</Separator>\n      <p>{t(\"Ask the instructor to sign you up\")}</p>\n    </>\n  );\n};\n\nexport default LoginForm;\n","import React from \"react\";\nimport { useTranslation } from \"react-i18next\";\n\ninterface ISignInContainerProps {\n  children: React.ReactNode;\n}\n\nconst SignInContainer = ({ children }: ISignInContainerProps) => {\n  const { t } = useTranslation();\n\n  return (\n    <div className=\"w-full min-h-screen px-2 flex flex-col lg:flex-row justify-center lg:justify-around items-center bg-gray-100\">\n      <div className=\"hidden md:block mb-8 lg:pr-24\">\n        <h1 className=\"text-8xl text-primary mb-4\">Developer Life</h1>\n        <img\n          src=\"/static/static/img/insper.png\"\n          className=\"h-16\"\n          alt=\"Insper Logo\"\n        />\n      </div>\n      <div className=\"max-w-xs rounded shadow\">\n        <h2 className=\"text-3xl uppercase px-6 py-4 bg-primary text-white rounded-t text-center md:hidden\">\n          {t(\"Developer Life\")}\n        </h2>\n        <div className=\"bg-white px-4 py-4 md:px-6 md:py-6 rounded\">\n          {children}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SignInContainer;\n","import React, { useEffect, useMemo } from \"react\";\nimport { useUser } from \"../../contexts/user-context\";\nimport { useHistory } from \"react-router\";\nimport useQuery from \"../../hooks/useQuery\";\nimport LoginForm from \"./LoginForm\";\nimport SignInContainer from \"../../fragments/SignInContainer\";\n\nconst Login = () => {\n  const { user, removeUser } = useUser();\n  const history = useHistory();\n  const params = useQuery();\n  const redirectTo = params.get(\"redirectTo\");\n  const decodedRedirectTo = useMemo(\n    () => redirectTo && decodeURIComponent(redirectTo),\n    [redirectTo],\n  );\n\n  useEffect(() => {\n    if (!user) return;\n    if (params.get(\"reason\")) removeUser();\n    else if (decodedRedirectTo) {\n      let newHref = decodedRedirectTo;\n      newHref += `${newHref.indexOf(\"?\") >= 0 ? \"&\" : \"?\"}token=${user.token}`;\n      window.location.href = newHref;\n    } else {\n      history.replace(params.get(\"next\") || \"/\");\n    }\n  }, [history, params, user, removeUser, decodedRedirectTo]);\n\n  return (\n    <SignInContainer>\n      <LoginForm />\n    </SignInContainer>\n  );\n};\n\nexport default Login;\n","import * as yup from \"yup\";\n\nexport interface PasswordChangeInputs {\n  password: string;\n  passwordConfirmation: string;\n}\n\nexport const schema = yup.object().shape({\n  password: yup.string().required(),\n  passwordConfirmation: yup\n    .string()\n    .test(\"passwords-match\", \"Passwords must match\", function (value) {\n      return this.parent.password === value;\n    }),\n});\n","import React, { useEffect, useRef, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport Form from \"../../../components/Form\";\nimport { useTranslation } from \"react-i18next\";\nimport Button from \"../../../components/Button\";\nimport { schema, PasswordChangeInputs } from \"../password-change-schema\";\nimport { resetPassword } from \"../../../services/auth\";\nimport ErrorMessage from \"../../../components/Form/ErrorMessage\";\nimport LoadingIndicator from \"../../../components/LoadingIndicator\";\nimport { useHistory } from \"react-router\";\n\ninterface IPasswordChangeForm {\n  firstTime: boolean;\n  uid?: string;\n  token?: string;\n  reason?: string | null;\n}\n\nconst PasswordChangeForm = ({\n  firstTime,\n  uid,\n  token,\n  reason,\n}: IPasswordChangeForm) => {\n  const history = useHistory();\n\n  const mounted = useRef(true);\n  useEffect(() => {\n    return () => {\n      mounted.current = false;\n    };\n  }, []);\n\n  const [loading, setLoading] = useState<boolean>(false);\n  const { t } = useTranslation();\n\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm<PasswordChangeInputs>({\n    resolver: yupResolver(schema),\n  });\n\n  const [invalidLink, setInvalidLink] = useState<boolean>(false);\n  const onSubmit = (data: PasswordChangeInputs) => {\n    setLoading(true);\n    resetPassword(\n      uid || \"\",\n      token || \"\",\n      data.password,\n      data.passwordConfirmation,\n    )\n      .then((success) => {\n        if (success) history.push(\"/\");\n        else setInvalidLink(true);\n      })\n      .finally(() => mounted.current && setLoading(false));\n  };\n\n  const { onChange: onPasswordChange, ...passwordInputProps } =\n    register(\"password\");\n\n  const {\n    onChange: onPasswordConfirmationChange,\n    ...passwordConfirmationInputProps\n  } = register(\"passwordConfirmation\");\n\n  return (\n    <>\n      <Form onSubmit={handleSubmit(onSubmit)}>\n        <Form.TextInput\n          label={t(\"Password\")}\n          inputId=\"password\"\n          type=\"password\"\n          placeholder={t(\"Password\")}\n          {...passwordInputProps}\n          onChange={onPasswordChange}\n          error={t(errors?.password?.message || \"\")}\n        />\n        <Form.TextInput\n          label={t(\"Repeat password\")}\n          inputId=\"passwordConfirmation\"\n          type=\"password\"\n          placeholder={t(\"Password\")}\n          {...passwordConfirmationInputProps}\n          onChange={onPasswordConfirmationChange}\n          error={t(errors?.passwordConfirmation?.message || \"\")}\n        />\n        {!!reason && <ErrorMessage>{t(reason || \"\")}</ErrorMessage>}\n        {invalidLink && (\n          <ErrorMessage>{t(\"Invalid password reset link\")}</ErrorMessage>\n        )}\n        <Button\n          variant=\"secondary\"\n          className=\"mt-2 w-full\"\n          type=\"submit\"\n          disabled={loading}>\n          {firstTime ? t(\"Set password\") : t(\"Reset password\")}\n        </Button>\n        {loading && (\n          <div className=\"w-full flex justify-center\">\n            <LoadingIndicator className=\"text-xs\" />\n          </div>\n        )}\n      </Form>\n    </>\n  );\n};\n\nexport default PasswordChangeForm;\n","import React from \"react\";\nimport { matchPath, useLocation } from \"react-router\";\nimport useQuery from \"../../hooks/useQuery\";\nimport PasswordChangeForm from \"./PasswordChangeForm\";\nimport SignInContainer from \"../../fragments/SignInContainer\";\nimport { routes, routesData } from \"../../routes\";\n\nconst PasswordChange = () => {\n  const params = useQuery();\n  const firstTime = params.get(\"first\");\n  const location = useLocation();\n  const pathParams = matchPath(\n    location.pathname,\n    routesData[routes.PASSWORD_RESET].props,\n  )?.params as { uid: string; token: string };\n\n  return (\n    <>\n      <SignInContainer>\n        <PasswordChangeForm\n          firstTime={!!firstTime}\n          uid={pathParams?.uid}\n          token={pathParams?.token}\n          reason={params.get(\"reason\")}\n        />\n      </SignInContainer>\n    </>\n  );\n};\n\nexport default PasswordChange;\n","import React, { HTMLProps } from \"react\";\n\nconst SubTitle = ({ children, className }: HTMLProps<HTMLHeadingElement>) => {\n  return (\n    <h2\n      className={`${className || \"\"} text-2xl text-primary leading-none mt-1`}>\n      {children}\n    </h2>\n  );\n};\n\nexport default SubTitle;\n","import React from \"react\";\nimport { motion } from \"framer-motion\";\n\ninterface IProgressCheckProps {\n  className?: string;\n  progress: number; // Should be in [0.0, 1.0]\n}\n\nconst defaultProps = {\n  progress: 1,\n};\n\nconst ProgressCheck = ({ className, progress }: IProgressCheckProps) => {\n  const length = 2 * 90 * Math.PI;\n  if (progress < 0) progress = 0;\n  if (progress > 1) progress = 1;\n\n  const checkLength = (40 + 70) * Math.sqrt(2);\n\n  const circleVariants = {\n    start: {\n      strokeDashoffset: length,\n    },\n    progress: {\n      strokeDashoffset: length * (1 - progress),\n      transition: {\n        duration: 0.5,\n      },\n    },\n  };\n  const checkVariants = {\n    start: {\n      strokeDashoffset: checkLength,\n    },\n    progress: {\n      strokeDashoffset: 0,\n      transition: {\n        duration: 0.5,\n        delay: 0.2,\n      },\n    },\n  };\n\n  return (\n    <svg\n      className={className || \"\"}\n      id=\"svg\"\n      width=\"200\"\n      height=\"200\"\n      viewBox=\"0 0 200 200\"\n      version=\"1.1\"\n      xmlns=\"http://www.w3.org/2000/svg\">\n      <circle\n        r=\"90\"\n        cx=\"100\"\n        cy=\"100\"\n        fill=\"transparent\"\n        stroke=\"#cad8ca\"\n        strokeWidth=\"20\"\n      />\n      <motion.circle\n        r=\"90\"\n        cx=\"100\"\n        cy=\"100\"\n        fill=\"transparent\"\n        stroke=\"#27A5A2\"\n        transform=\"rotate(-90 100 100)\"\n        strokeWidth=\"20\"\n        strokeDasharray={`${length}`}\n        strokeDashoffset={`${length * (1 - progress)}`}\n        variants={circleVariants}\n        initial=\"start\"\n        animate=\"progress\"\n      />\n      {progress === 1 && (\n        <motion.path\n          d=\"M45 95L85 135L155 65\"\n          fill=\"transparent\"\n          stroke=\"#27A5A2\"\n          strokeWidth=\"20\"\n          strokeDasharray={`${checkLength}`}\n          strokeDashoffset={\"0\"}\n          variants={checkVariants}\n          initial=\"start\"\n          animate=\"progress\"\n        />\n      )}\n    </svg>\n  );\n};\n\nProgressCheck.defaultProps = defaultProps;\n\nexport default ProgressCheck;\n","import { RouteProps } from \"react-router\";\nimport { IUser } from \"../models/User\";\nimport ExerciseAnswers from \"../screens/ExerciseAnswers\";\nimport InstructorHome from \"../screens/InstructorHome\";\nimport Login from \"../screens/Login\";\nimport PasswordChange from \"../screens/PasswordChange\";\nimport StudentHome from \"../screens/StudentHome\";\n\nexport enum routes {\n  STUDENT_HOME = \"/\",\n  INSTRUCTOR_HOME = \"/instructor\",\n  EXERCISE_ANSWERS = \"/instructor/answers/:offering/:slug/\",\n  LOGIN = \"/login\",\n  PASSWORD_RESET = \"/password-reset/:uid/:token/\",\n}\n\ninterface IRouteData {\n  title: string;\n  permissionTest?: (user: IUser | null) => boolean;\n  props: RouteProps;\n}\n\nexport const routesData: { [route: string]: IRouteData } = {};\nroutesData[routes.STUDENT_HOME] = {\n  title: \"Student Dashboard\",\n  props: {\n    path: routes.STUDENT_HOME,\n    exact: true,\n    component: StudentHome,\n  },\n};\nroutesData[routes.INSTRUCTOR_HOME] = {\n  title: \"Instructor Dashboard\",\n  permissionTest: (user: IUser | null): boolean => !!user?.isStaff,\n  props: {\n    path: routes.INSTRUCTOR_HOME,\n    exact: true,\n    component: InstructorHome,\n  },\n};\nroutesData[routes.EXERCISE_ANSWERS] = {\n  title: \"Exercise Answers\",\n  permissionTest: (user: IUser | null): boolean => !!user?.isStaff,\n  props: {\n    path: routes.EXERCISE_ANSWERS,\n    exact: true,\n    component: ExerciseAnswers,\n  },\n};\nroutesData[routes.LOGIN] = {\n  title: \"Login\",\n  props: {\n    path: routes.LOGIN,\n    exact: true,\n    component: Login,\n  },\n};\nroutesData[routes.PASSWORD_RESET] = {\n  title: \"Password reset\",\n  props: {\n    path: routes.PASSWORD_RESET,\n    exact: true,\n    component: PasswordChange,\n  },\n};\n\nexport const navRoutes: string[] = [routes.INSTRUCTOR_HOME];\n","import React from \"react\";\nimport ProgressCheck from \"../../../components/ProgressCheck\";\nimport Title from \"../../../components/Title\";\nimport { ICompletionRates } from \"../service\";\n\ninterface IColumnProps {\n  title: string;\n  options: string[];\n  completionRates: ICompletionRates;\n  selectedRow: number;\n  onSelect?: (option: string, index: number) => void;\n}\n\nconst Column = ({\n  options,\n  onSelect,\n  title,\n  completionRates,\n  selectedRow,\n}: IColumnProps) => {\n  const handleClick = (idx: number) => {\n    onSelect && onSelect(options[idx], idx);\n  };\n\n  return (\n    <div className=\"border border-gray-200 py-2 overflow-hidden\">\n      <Title variant={5} className=\"px-4 mt-2\">\n        {title}\n      </Title>\n      <ul className=\"mt-4\">\n        {options.map((option, idx) => (\n          <li\n            key={`option-${option}-${idx}`}\n            onClick={() => handleClick(idx)}\n            className={`flex items-center cursor-pointer px-4 py-1 ${\n              idx === selectedRow ? \"bg-primary-50\" : \"\"\n            }`}>\n            <div className=\"min-w-min mr-2\">\n              <ProgressCheck\n                className=\"w-6 h-6\"\n                progress={completionRates[option]}\n              />\n            </div>\n            {option}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Column;\n","import React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport Button from \"../../../components/Button\";\nimport Title from \"../../../components/Title\";\nimport { useUser } from \"../../../contexts/user-context\";\nimport { IExercise } from \"../../../models/Exercise\";\nimport { IUserAnswerSummaryMap } from \"../../../models/UserAnswerSummary\";\nimport { useAnswer } from \"../../../services/exercises\";\n\ninterface ICodeExerciseResultProps {\n  offering: number;\n  summaryMap: IUserAnswerSummaryMap;\n  exercise: IExercise;\n}\n\nconst CodeExerciseResult = ({\n  offering,\n  summaryMap,\n  exercise,\n}: ICodeExerciseResultProps) => {\n  const { t } = useTranslation();\n  const { user } = useUser();\n\n  const summary = summaryMap[exercise?.pk];\n  const { answer } = useAnswer(\n    offering,\n    user?.token || \"\",\n    exercise?.slug,\n    summary?.latest,\n  );\n  return (\n    <>\n      <Title variant={5} className=\"px-4 mt-2\">\n        {exercise?.slug || \"\"}\n      </Title>\n      <div className=\"px-4 mt-4\">\n        <Button className=\"uppercase tracking-wide\">Ver Exercício</Button>\n        <section className=\"mt-6\">\n          <Title variant={5}>{t(\"Results\")}</Title>\n          <div className=\"flex flex-wrap mt-2\">\n            <span className=\"mr-8\">\n              {t(\"Max points\")}:{\" \"}\n              <strong className=\"font-bold text-primary-500\">\n                {Math.round((summary?.max_points || 0) * 10000) / 100}%\n              </strong>\n            </span>\n            <span className=\"mr-8\">\n              {t(\"Attempts\")}:{\" \"}\n              <strong className=\"font-bold\">\n                {summary?.answer_count || 0}\n              </strong>\n            </span>\n          </div>\n        </section>\n        {exercise.type === \"CODE\" && (\n          <section className=\"mt-6\">\n            <h6 className=\"font-bold\">{t(\"Last attempt\")}</h6>\n            <div className=\"flex flex-wrap mt-2\">\n              <span className=\"mr-8\">\n                {t(\"Tests passing\")}:{\" \"}\n                <strong className=\"font-bold\">\n                  {answer && answer.summary ? answer.summary?.passed : \"0\"}\n                </strong>\n              </span>\n            </div>\n            {answer?.long_answer?.code && (\n              <div className=\"mt-4\">\n                <strong className=\"font-bold\">{t(\"Your solution\")}:</strong>\n                <pre className=\"mt-2 bg-black text-white py-4 px-4\">\n                  {answer.long_answer.code}\n                </pre>\n              </div>\n            )}\n          </section>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default CodeExerciseResult;\n","import React from \"react\";\nimport ProgressCheck from \"../../../components/ProgressCheck\";\nimport Title from \"../../../components/Title\";\nimport { IExerciseGroups } from \"../../../models/Exercise\";\nimport { ICompletionRates } from \"../service\";\n\ninterface IGroupResultProps {\n  group: IExerciseGroups;\n  completionRates: ICompletionRates;\n}\n\nconst GroupResult = ({ group, completionRates }: IGroupResultProps) => {\n  const groupName = Object.keys(group)[0];\n  return (\n    <>\n      <Title variant={5} className=\"px-4 mt-2\">\n        {groupName}\n      </Title>\n      <div className=\"px-4 mt-4\">\n        <ProgressCheck progress={completionRates[groupName] || 0} />\n      </div>\n    </>\n  );\n};\n\nexport default GroupResult;\n","import React from \"react\";\nimport ProgressCheck from \"../../../components/ProgressCheck\";\nimport Title from \"../../../components/Title\";\nimport { ITopicContentExercises } from \"../../../models/Exercise\";\nimport { ICompletionRates } from \"../service\";\n\ninterface ITopicResultProps {\n  topic: ITopicContentExercises;\n  completionRates: ICompletionRates;\n}\n\nconst TopicResult = ({ topic, completionRates }: ITopicResultProps) => {\n  const topicName = Object.keys(topic)[0];\n  return (\n    <>\n      <Title variant={5} className=\"px-4 mt-2\">\n        {topicName}\n      </Title>\n      <div className=\"px-4 mt-4\">\n        <ProgressCheck progress={completionRates[topicName] || 0} />\n      </div>\n    </>\n  );\n};\n\nexport default TopicResult;\n","import React from \"react\";\nimport {\n  IExercise,\n  IExerciseGroups,\n  ITopicContentExercises,\n} from \"../../../models/Exercise\";\nimport { IUserAnswerSummaryMap } from \"../../../models/UserAnswerSummary\";\nimport CodeExerciseResult from \"../CodeExerciseResult\";\nimport GroupResult from \"../GroupResult\";\nimport { ICompletionRates } from \"../service\";\nimport TopicResult from \"../TopicResult\";\n\ninterface IResultColumnProps {\n  data: IExercise | IExerciseGroups | ITopicContentExercises | null;\n  offering: number;\n  summaryMap: IUserAnswerSummaryMap;\n  completionRates: ICompletionRates;\n}\n\nconst getComponent = (\n  data: any,\n  offering: number,\n  summaryMap: IUserAnswerSummaryMap,\n  completionRates: ICompletionRates,\n): React.ReactNode => {\n  if (!data) return null;\n\n  // Is exercise\n  if (data.slug)\n    return (\n      <CodeExerciseResult\n        offering={offering}\n        summaryMap={summaryMap}\n        exercise={data}\n      />\n    );\n\n  // Is exercise group\n  const keys = Object.keys(data);\n  if (keys && data[keys[0]]?.length)\n    return <GroupResult group={data} completionRates={completionRates} />;\n\n  // Is topic\n  const keys2 = Object.keys(data[keys[0]]);\n  if (keys && keys2 && data[keys[0]][keys2[0]]?.length)\n    return <TopicResult topic={data} completionRates={completionRates} />;\n\n  // I don't know what you are\n  return null;\n};\n\nconst ResultColumn = ({\n  data,\n  offering,\n  summaryMap,\n  completionRates,\n}: IResultColumnProps) => {\n  return <>{getComponent(data, offering, summaryMap, completionRates)}</>;\n};\n\nexport default ResultColumn;\n","import {\n  IExercise,\n  IExerciseGroups,\n  ITopicContentExercises,\n} from \"../../../models/Exercise\";\nimport { IUserAnswerSummaryMap } from \"../../../models/UserAnswerSummary\";\n\nexport interface ICompletionRates {\n  [name: string]: number;\n}\n\nexport const extractCompletionRatesFromExercises = (\n  exercises: IExercise[],\n  answerSummaries: IUserAnswerSummaryMap,\n): ICompletionRates => {\n  return Object.fromEntries(\n    exercises.map((exercise) => {\n      const summary = answerSummaries[exercise.pk];\n      return [exercise.slug, summary ? summary.max_points : 0];\n    }),\n  );\n};\n\nexport const extractCompletionRatesFromExerciseGroups = (\n  exercises: IExerciseGroups,\n  answerSummaries: IUserAnswerSummaryMap,\n): ICompletionRates => {\n  return Object.fromEntries(\n    Object.keys(exercises).map((name) => {\n      const rates = Object.values(\n        extractCompletionRatesFromExercises(exercises[name], answerSummaries),\n      );\n      return [name, rates.reduce((a, b) => a + b, 0) / rates.length];\n    }),\n  );\n};\n\nexport const extractCompletionRatesFromTopicContents = (\n  exercises: ITopicContentExercises,\n  answerSummaries: IUserAnswerSummaryMap,\n): ICompletionRates => {\n  return Object.assign(\n    {},\n    ...Object.keys(exercises).map((name) => {\n      const contentGroups = exercises[name];\n      const allExercises = Object.keys(contentGroups)\n        .map((groupName) => contentGroups[groupName])\n        .reduce((a, b) => {\n          if (!a && !b) return [];\n          if (!a) return b;\n          if (!b) return a;\n          return a.concat(b);\n        }, []);\n      return extractCompletionRatesFromExerciseGroups(\n        { [name]: allExercises },\n        answerSummaries,\n      );\n    }),\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport {\n  IExercise,\n  IExerciseGroups,\n  ITopicContentExercises,\n} from \"../../models/Exercise\";\nimport { IUserAnswerSummaryMap } from \"../../models/UserAnswerSummary\";\nimport Column from \"./Column\";\nimport ResultColumn from \"./ResultColumn\";\nimport {\n  ICompletionRates,\n  extractCompletionRatesFromExerciseGroups,\n  extractCompletionRatesFromExercises,\n  extractCompletionRatesFromTopicContents,\n} from \"./service\";\n\ninterface IExerciseResultVisualizationProps {\n  exerciseGroups: ITopicContentExercises;\n  summaryMap: IUserAnswerSummaryMap;\n  className?: string;\n}\n\nconst ExerciseResultVisualization = ({\n  exerciseGroups,\n  summaryMap,\n  className,\n}: IExerciseResultVisualizationProps) => {\n  const { t } = useTranslation();\n  const [topic, setTopic] = useState<string>(\"\");\n  const [contentGroup, setContentGroup] = useState<string>(\"\");\n\n  const [\n    topicCompletionRates,\n    setTopicCompletionRates,\n  ] = useState<ICompletionRates>({});\n  useEffect(() => {\n    setTopicCompletionRates(\n      extractCompletionRatesFromTopicContents(exerciseGroups, summaryMap),\n    );\n  }, [exerciseGroups, summaryMap]);\n\n  const [contentGroups, setContentGroups] = useState<IExerciseGroups>({});\n  const [\n    groupCompletionRates,\n    setGroupCompletionRates,\n  ] = useState<ICompletionRates>({});\n  useEffect(() => {\n    const groups = topic ? exerciseGroups[topic] : {};\n    setContentGroups(groups);\n    if (groups)\n      setGroupCompletionRates(\n        extractCompletionRatesFromExerciseGroups(groups, summaryMap),\n      );\n  }, [topic, exerciseGroups, summaryMap]);\n\n  const [exercises, setExercises] = useState<string[]>([]);\n  const [\n    exerciseCompletionRates,\n    setExerciseCompletionRates,\n  ] = useState<ICompletionRates>({});\n  useEffect(() => {\n    const exerciseList = contentGroups[contentGroup];\n    setExercises(\n      Object.keys(contentGroups) && contentGroup\n        ? exerciseList.map((exercise) => exercise.slug)\n        : [],\n    );\n    if (exerciseList)\n      setExerciseCompletionRates(\n        extractCompletionRatesFromExercises(exerciseList, summaryMap),\n      );\n  }, [contentGroups, contentGroup, summaryMap]);\n\n  const [selectedTopicRow, setSelectedTopicRow] = useState<number>(-1);\n  const [selectedGroupRow, setSelectedGroupRow] = useState<number>(-1);\n  const [selectedExerciseRow, setSelectedExerciseRow] = useState<number>(-1);\n  const [selectedLevel, setSelectedLevel] = useState<number>(0);\n  const [selectedData, setSelectedData] = useState<\n    IExercise | IExerciseGroups | ITopicContentExercises | null\n  >(null);\n  const handleSelectTopic = (topic: string, idx: number) => {\n    setTopic(topic);\n    setSelectedData({ [topic]: exerciseGroups[topic] });\n    setContentGroup(\"\");\n    setSelectedTopicRow(idx);\n    setSelectedGroupRow(-1);\n    setSelectedExerciseRow(-1);\n    setSelectedLevel(0);\n  };\n  const handleSelectGroup = (group: string, idx: number) => {\n    setContentGroup(group);\n    setSelectedData({ [group]: contentGroups[group] });\n    setSelectedGroupRow(idx);\n    setSelectedExerciseRow(-1);\n    setSelectedLevel(1);\n  };\n  const handleSelectExercise = (slug: string, idx: number) => {\n    const exercise = contentGroups[contentGroup][idx];\n    setSelectedData(exercise);\n    setSelectedExerciseRow(idx);\n    setSelectedLevel(2);\n  };\n\n  return (\n    <div className={`grid grid-cols-6 shadow-sm ${className ? className : \"\"}`}>\n      <Column\n        title={t(\"Topic\")}\n        options={Object.keys(exerciseGroups)}\n        onSelect={handleSelectTopic}\n        completionRates={topicCompletionRates}\n        selectedRow={selectedTopicRow}\n      />\n      <Column\n        title={t(\"Content\")}\n        options={Object.keys(contentGroups)}\n        onSelect={handleSelectGroup}\n        completionRates={groupCompletionRates}\n        selectedRow={selectedGroupRow}\n      />\n      <Column\n        title={t(\"Exercises\")}\n        options={exercises}\n        onSelect={handleSelectExercise}\n        completionRates={exerciseCompletionRates}\n        selectedRow={selectedExerciseRow}\n      />\n      <div className=\"col-start-4 col-end-7 border border-gray-200 py-2\">\n        <ResultColumn\n          offering={1}\n          data={selectedData}\n          summaryMap={summaryMap}\n          completionRates={\n            [\n              topicCompletionRates,\n              groupCompletionRates,\n              exerciseCompletionRates,\n            ][selectedLevel]\n          }\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default ExerciseResultVisualization;\n","import React, { useEffect, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport Container from \"../../components/Container\";\nimport SubTitle from \"../../components/SubTitle\";\nimport Title from \"../../components/Title\";\nimport { useUser } from \"../../contexts/user-context\";\nimport ExerciseResultVisualization from \"../../fragments/ExerciseResultVisualization\";\nimport Header from \"../../fragments/Header\";\nimport {\n  groupByTopicAndContent,\n  ITopicContentExercises,\n} from \"../../models/Exercise\";\nimport {\n  summaryListToMap,\n  IUserAnswerSummary,\n  IUserAnswerSummaryMap,\n} from \"../../models/UserAnswerSummary\";\nimport { useExerciseList, useSummaryList } from \"../../services/exercises\";\n\nconst StudentHome = () => {\n  const { t } = useTranslation();\n  const { user } = useUser();\n  const [exerciseGroups, setExerciseGroups] = useState<ITopicContentExercises>(\n    {},\n  );\n\n  const token = user?.token || \"\";\n  const offering = 1;\n\n  const { exerciseList } = useExerciseList(offering, token);\n  useEffect(() => {\n    setExerciseGroups(groupByTopicAndContent(exerciseList));\n  }, [exerciseList]);\n\n  const { summaryList, loading: loadingSummaryList } = useSummaryList(\n    offering,\n    token,\n    user?.pk,\n  );\n  const [summaryMap, setSummaryMap] = useState<IUserAnswerSummaryMap>({});\n  useEffect(() => {\n    if (loadingSummaryList) return;\n    setSummaryMap(summaryListToMap(summaryList));\n  }, [summaryList, loadingSummaryList]);\n\n  if (!user) return null;\n\n  return (\n    <>\n      <Header />\n      <Container>\n        <Title>{t(\"Dashboard\")}</Title>\n        <SubTitle>{`${user.firstName} ${user?.lastName}`}</SubTitle>\n\n        <section className=\"my-8\">\n          <Title variant={2}>{t(\"Exercises\")}</Title>\n          <ExerciseResultVisualization\n            exerciseGroups={exerciseGroups}\n            summaryMap={summaryMap}\n            className=\"mt-4\"\n          />\n        </section>\n      </Container>\n    </>\n  );\n};\n\nexport default StudentHome;\n","export interface IExercise {\n  pk: number;\n  slug: string;\n  url: string;\n  type: string;\n  offering: number;\n  topic: string;\n  group: string;\n}\n\nexport interface IExerciseGroups {\n  [url: string]: IExercise[];\n}\nexport const groupByURL = (exercises: IExercise[]): IExerciseGroups => {\n  const groups: IExerciseGroups = {};\n\n  exercises.forEach((exercise) => {\n    if (!groups[exercise.url]) groups[exercise.url] = [];\n    groups[exercise.url].push(exercise);\n  });\n\n  return groups;\n};\n\nexport interface ITopicContentExercises {\n  [url: string]: IExerciseGroups;\n}\n\nexport const groupByTopicAndContent = (\n  exercises: IExercise[],\n): ITopicContentExercises => {\n  const groups: ITopicContentExercises = {};\n\n  exercises.forEach((exercise) => {\n    const { topic, group } = exercise;\n    if (!groups[topic]) groups[topic] = {};\n    if (!groups[topic][group]) groups[topic][group] = [];\n    groups[topic][group].push(exercise);\n  });\n\n  return groups;\n};\n","export interface IUserAnswerSummary {\n  pk: number;\n  user: number;\n  exercise: number;\n  max_points: number;\n  answer_count: number;\n  latest: number;\n}\n\nexport interface IUserAnswerSummaryMap {\n  [exercise: number]: IUserAnswerSummary;\n}\n\nexport const summaryListToMap = (\n  summaryList: IUserAnswerSummary[],\n): IUserAnswerSummaryMap => {\n  return Object.fromEntries(\n    summaryList.map((summary) => [summary.exercise, summary]),\n  );\n};\n","import React from \"react\";\nimport { matchPath, Redirect, useLocation } from \"react-router\";\nimport { useUser } from \"../../../contexts/user-context\";\nimport { routes, routesData } from \"../../../routes\";\n\nconst LoginRedirect = () => {\n  const { user } = useUser();\n  const location = useLocation();\n\n  if (\n    !user &&\n    !matchPath(location.pathname, routesData[routes.LOGIN].props) &&\n    !matchPath(location.pathname, routesData[routes.PASSWORD_RESET].props)\n  )\n    return (\n      <Redirect\n        to={{ pathname: routes.LOGIN, search: `?next=${location.pathname}` }}\n      />\n    );\n  return null;\n};\n\nexport default LoginRedirect;\n","import React from \"react\";\nimport UserProvider from \"./user-context\";\n\nconst Contexts: React.FC = ({ children }) => {\n  return <UserProvider>{children}</UserProvider>;\n};\n\nexport default Contexts;\n","import i18n from \"i18next\";\nimport { initReactI18next } from \"react-i18next\";\nimport translationEN from \"./locales/en/translation.json\";\nimport translationPT from \"./locales/pt/translation.json\";\n\ni18n\n  .use(initReactI18next) // passes i18n down to react-i18next\n  .init({\n    // the translations\n    // (tip move them in a JSON file and import them,\n    resources: {\n      en: {\n        translation: translationEN,\n      },\n      pt: {\n        translation: translationPT,\n      },\n    },\n    lng: \"pt\",\n    fallbackLng: \"pt\",\n\n    interpolation: {\n      escapeValue: false, // react already safes from xss => https://www.i18next.com/translation-function/interpolation#unescape\n    },\n  });\n\nexport default i18n;\n","import React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport LoginRedirect from \"../components/Redirect/LoginRedirect\";\nimport Contexts from \"../contexts\";\n\nimport { routesData } from \"../routes\";\nimport \"../translations/i18n\";\n\nfunction App() {\n  return (\n    <Contexts>\n      <div className=\"App\">\n        <LoginRedirect />\n        <div>\n          <Switch>\n            {Object.entries(routesData).map(([uri, { props }], idx) => (\n              <Route key={`route__${idx}`} {...props} />\n            ))}\n          </Switch>\n        </div>\n      </div>\n    </Contexts>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\"),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"animationContainer\":\"LoadingIndicator_animationContainer__31NJQ\",\"loadingDot\":\"LoadingIndicator_loadingDot__9elUF\",\"dark\":\"LoadingIndicator_dark__VNh81\",\"light\":\"LoadingIndicator_light__1lhVC\",\"dotContainer\":\"LoadingIndicator_dotContainer__3C8Kq\"};"],"sourceRoot":""}